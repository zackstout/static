(function(t){function e(e){for(var i,o,r=e[0],l=e[1],c=e[2],u=0,d=[];u<r.length;u++)o=r[u],Object.prototype.hasOwnProperty.call(n,o)&&n[o]&&d.push(n[o][0]),n[o]=0;for(i in l)Object.prototype.hasOwnProperty.call(l,i)&&(t[i]=l[i]);p&&p(e);while(d.length)d.shift()();return s.push.apply(s,c||[]),a()}function a(){for(var t,e=0;e<s.length;e++){for(var a=s[e],i=!0,r=1;r<a.length;r++){var l=a[r];0!==n[l]&&(i=!1)}i&&(s.splice(e--,1),t=o(o.s=a[0]))}return t}var i={},n={app:0},s=[];function o(e){if(i[e])return i[e].exports;var a=i[e]={i:e,l:!1,exports:{}};return t[e].call(a.exports,a,a.exports,o),a.l=!0,a.exports}o.m=t,o.c=i,o.d=function(t,e,a){o.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:a})},o.r=function(t){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},o.t=function(t,e){if(1&e&&(t=o(t)),8&e)return t;if(4&e&&"object"===typeof t&&t&&t.__esModule)return t;var a=Object.create(null);if(o.r(a),Object.defineProperty(a,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var i in t)o.d(a,i,function(e){return t[e]}.bind(null,i));return a},o.n=function(t){var e=t&&t.__esModule?function(){return t["default"]}:function(){return t};return o.d(e,"a",e),e},o.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},o.p="/";var r=window["webpackJsonp"]=window["webpackJsonp"]||[],l=r.push.bind(r);r.push=e,r=r.slice();for(var c=0;c<r.length;c++)e(r[c]);var p=l;s.push([0,"chunk-vendors"]),a()})({0:function(t,e,a){t.exports=a("cd49")},"072f":function(t,e,a){},"0954":function(t,e,a){t.exports=a.p+"img/Screen Shot 2021-04-18 at 6.55.16 PM.ce299b69.png"},"0e72":function(t,e,a){t.exports=a.p+"img/game-of-life-quick.bcf0b9e5.png"},"0f98":function(t,e,a){t.exports=a.p+"img/Screen Shot 2021-04-18 at 6.54.18 PM.aadb0c74.png"},"128e":function(t,e,a){var i={"./Cardioid-animation.png":"794d","./Minesweeper.png":"a2dd","./Screen Shot 2021-04-18 at 6.53.07 PM.png":"f291","./Screen Shot 2021-04-18 at 6.53.41 PM.png":"eb53","./Screen Shot 2021-04-18 at 6.53.53 PM.png":"f7c3","./Screen Shot 2021-04-18 at 6.54.18 PM.png":"0f98","./Screen Shot 2021-04-18 at 6.55.16 PM.png":"0954","./Screen Shot 2021-04-18 at 6.55.37 PM.png":"a9ac","./Screen Shot 2021-04-18 at 6.56.03 PM.png":"275d","./Screen Shot 2021-04-18 at 6.56.37 PM.png":"7e1e","./Screen Shot 2021-04-18 at 6.56.53 PM.png":"aca3","./Screen Shot 2021-04-18 at 6.57.55 PM.png":"396a","./Screen Shot 2021-04-18 at 6.59.38 PM.png":"acf2","./bard.png":"aeb2","./cellular-automata.png":"8a44","./fourier-canvas.png":"22be","./game-of-life-quick.png":"0e72","./irrational-angles.png":"6a1e","./logarithmic-spiral.png":"7c56","./maze-generator.png":"c906","./orthocenters.png":"8151","./recaman-sequence-visualization.png":"9052","./sonic-boom-animation.png":"e72d","./vector-fields.png":"8a0f"};function n(t){var e=s(t);return a(e)}function s(t){if(!a.o(i,t)){var e=new Error("Cannot find module '"+t+"'");throw e.code="MODULE_NOT_FOUND",e}return i[t]}n.keys=function(){return Object.keys(i)},n.resolve=s,t.exports=n,n.id="128e"},"22be":function(t,e,a){t.exports=a.p+"img/fourier-canvas.4b60921c.png"},"275d":function(t,e,a){t.exports=a.p+"img/Screen Shot 2021-04-18 at 6.56.03 PM.5af65025.png"},3792:function(t,e,a){"use strict";a("a799")},"396a":function(t,e,a){t.exports=a.p+"img/Screen Shot 2021-04-18 at 6.57.55 PM.a5d64b8c.png"},"534c":function(t,e,a){"use strict";a("072f")},5465:function(t,e,a){},"6a1e":function(t,e,a){t.exports=a.p+"img/irrational-angles.b5e5f1f2.png"},"710a":function(t,e,a){var i={"./face1.jpg":"7766","./face2.jpg":"f5cc"};function n(t){var e=s(t);return a(e)}function s(t){if(!a.o(i,t)){var e=new Error("Cannot find module '"+t+"'");throw e.code="MODULE_NOT_FOUND",e}return i[t]}n.keys=function(){return Object.keys(i)},n.resolve=s,t.exports=n,n.id="710a"},7766:function(t,e,a){t.exports=a.p+"img/face1.e467745f.jpg"},"794d":function(t,e,a){t.exports=a.p+"img/Cardioid-animation.ac7ddff8.png"},"7c56":function(t,e,a){t.exports=a.p+"img/logarithmic-spiral.87a3deda.png"},"7e1e":function(t,e,a){t.exports=a.p+"img/Screen Shot 2021-04-18 at 6.56.37 PM.617d56f8.png"},8151:function(t,e,a){t.exports=a.p+"img/orthocenters.495ded06.png"},"8a0f":function(t,e,a){t.exports=a.p+"img/vector-fields.aab9380e.png"},"8a44":function(t,e,a){t.exports=a.p+"img/cellular-automata.a20525a6.png"},"8f11":function(t,e,a){"use strict";a("9a0e")},9052:function(t,e,a){t.exports=a.p+"img/recaman-sequence-visualization.32f0fca4.png"},"9a0e":function(t,e,a){},a2dd:function(t,e,a){t.exports=a.p+"img/Minesweeper.04e31ad7.png"},a5d2:function(t,e,a){"use strict";a("5465")},a799:function(t,e,a){},a9ac:function(t,e,a){t.exports=a.p+"img/Screen Shot 2021-04-18 at 6.55.37 PM.1721bf91.png"},aca3:function(t,e,a){t.exports=a.p+"img/Screen Shot 2021-04-18 at 6.56.53 PM.a44312b9.png"},acf2:function(t,e,a){t.exports=a.p+"img/Screen Shot 2021-04-18 at 6.59.38 PM.17890830.png"},aeb2:function(t,e,a){t.exports=a.p+"img/bard.aa8f1c09.png"},ba8c:function(t,e,a){},bbf7:function(t,e,a){t.exports=a.p+"img/histograms.e208f589.png"},c906:function(t,e,a){t.exports=a.p+"img/maze-generator.abc4cb3d.png"},cd49:function(t,e,a){"use strict";a.r(e);var i=a("2b0e"),n=function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"relative w-full h-full",attrs:{id:"app"}},[a("div",{staticClass:"bg-gray-100",attrs:{id:"sidebar"}},[t._l(t.sideNavs,(function(e){return a("div",{key:e.label,staticClass:"side-nav",class:[t.$route.path.includes(e.path)?"bg-blue-400 font-bold text-white":"hover:bg-blue-200 "],on:{click:function(a){t.$router.push({name:e.path}).catch((function(){}))}}},[t._v(" "+t._s(e.label)+" ")])})),t.$route.path.includes("/blog")?a("div",t._l(t.posts,(function(e){return a("div",{key:e.path,staticClass:"mb-2 cursor-pointer px-3 py-2 flex items-center leading-none",class:[t.$route.path.includes(e.path.slice(1))?"bg-blue-400 text-white":"hover:opacity-50"],on:{click:function(a){t.$router.push({name:e.path.slice(1)}).catch((function(){}))}}},[a("div",{staticClass:"h-2 w-2 mr-3 ml-3 flex-shrink-0",class:[t.$route.path.includes(e.path.slice(1))?"bg-white":"bg-blue-400"]}),a("div",[t._v(t._s(e.title))])])})),0):t._e()],2),a("div",{class:[t.themeLight?"bg-white text-gray-800":"bg-blue-800 text-white"],attrs:{id:"main"}},[a("router-view")],1)])},s=[],o=a("9ab4"),r=a("1b40");const l=[{title:"Combing through Data with Python",subtitle:"Apr. 8, 2018",fileName:"Post1",path:"/python_combing"},{title:"Writing SQL Queries",subtitle:"Dec. 15, 2017",fileName:"Post2",path:"/sql_queries"},{title:"Getting Started with Matter.js",subtitle:"Dec. 12, 2017",fileName:"Post3",path:"/matter_js"}];var c=function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("button",{staticClass:"flex-shrink-0 group relative rounded-full inline-flex items-center justify-center h-5 w-10 cursor-pointer focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blaze-teal",attrs:{type:"button","aria-pressed":"false"},on:{click:function(e){return t.$emit("click")}}},[a("span",{staticClass:"pointer-events-none absolute bg-white w-full h-full rounded-md",attrs:{"aria-hidden":"true"}}),a("span",{staticClass:"pointer-events-none absolute h-4 w-9 mx-auto rounded-full transition-colors ease-in-out duration-100",class:{"bg-blaze-teal":t.selected,"bg-gray-200":!t.selected},attrs:{"aria-hidden":"true"}}),a("span",{staticClass:"pointer-events-none absolute left-0 inline-block h-5 w-5 border border-gray-300 rounded-full bg-white shadow transform ring-0 transition-transform ease-in-out duration-100",class:{"translate-x-5":t.selected,"translate-x-0":!t.selected},attrs:{"aria-hidden":"true"}})])},p=[],u=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return Object(o["b"])(e,t),Object(o["a"])([Object(r["b"])(Boolean)],e.prototype,"selected",void 0),e=Object(o["a"])([r["a"]],e),e}(r["c"]),d=u,h=d,v=a("2877"),f=Object(v["a"])(h,c,p,!1,null,null,null),g=f.exports,m=function(t){function e(){var e=null!==t&&t.apply(this,arguments)||this;return e.posts=l,e.sideNavs=[{label:"About",path:"about"},{label:"Experience",path:"resume"},{label:"Projects",path:"projects"},{label:"Blog",path:"blog"}],e.themeLight=!0,e}return Object(o["b"])(e,t),e.prototype.toggleTheme=function(){this.themeLight=!this.themeLight,console.log("toggle",this.themeLight)},e=Object(o["a"])([Object(r["a"])({components:{ToggleButton:g}})],e),e}(r["c"]),b=m,_=b,w=(a("a5d2"),Object(v["a"])(_,n,s,!1,null,null,null)),y=w.exports,x=(a("ba8c"),a("8c4f")),C=function(){var t=this,e=t.$createElement,i=t._self._c||e;return i("div",{staticClass:"mb-8 p-3"},[i("div",{staticClass:"text-3xl mb-6"},[t._v("About")]),i("div",{staticClass:"w-full flex justify-between"},[t._m(0),i("div",{staticClass:"cursor-pointer",staticStyle:{width:"800px",height:"500px","background-size":"contain","background-repeat":"no-repeat","background-position":"center"},style:{backgroundImage:"url("+a("710a")("./"+t.bgImg+".jpg")+")"},on:{click:t.updateBg}})])])},S=[function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",[a("p",{staticClass:"p"},[t._v(" I am a web developer living in Minneapolis, Minnesota. ")]),a("p",{staticClass:"p"},[t._v(" My passions include math, puzzles, Greek tragedy and games. ")]),a("p",{staticClass:"p"},[t._v(" I enjoy trying to think creatively and analytically. I hope to make a positive impact on the world through software development. ")]),a("p",{staticClass:"p"},[t._v(" I have a wonderful dog named Apollo. ")])])}],j=function(t){function e(){var e=null!==t&&t.apply(this,arguments)||this;return e.bgImgNum=1,e}return Object(o["b"])(e,t),Object.defineProperty(e.prototype,"bgImg",{get:function(){return"face"+this.bgImgNum},enumerable:!1,configurable:!0}),e.prototype.updateBg=function(){1===this.bgImgNum?this.bgImgNum=2:this.bgImgNum=1},e.prototype.mounted=function(){document.title="About"},e=Object(o["a"])([r["a"]],e),e}(r["c"]),k=j,T=k,M=(a("3792"),Object(v["a"])(T,C,S,!1,null,"5b2805aa",null)),O=M.exports,B=function(){var t=this,e=t.$createElement;t._self._c;return t._m(0)},P=[function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"p-3"},[a("div",{staticClass:"text-3xl mb-6"},[t._v("Experience")]),a("div",{staticClass:"text-2xl my-3"},[t._v("Career History")]),a("div",{staticClass:"flex mb-2"},[a("div",{staticClass:"w-16 bg-green-600 mt-2 mx-2",staticStyle:{height:"2px"}}),a("div",[a("div",{staticClass:"text-xl"},[t._v("Front End Developer —— Screenfeed")]),a("div",{staticClass:"opacity-50 text-md"},[t._v("Oct. 2018 to Present")])])]),a("div",{staticClass:"flex mb-2"},[a("div",{staticClass:"w-16 bg-green-400 mt-2 mx-2",staticStyle:{height:"2px"}}),a("div",[a("div",{staticClass:"text-xl"},[t._v("Web Development Teaching Assistant —— University of Minnesota")]),a("div",{staticClass:"opacity-50 text-md"},[t._v("Feb. 2018 to Oct. 2018")])])]),a("div",{staticClass:"flex mb-2"},[a("div",{staticClass:"w-16 bg-green-200 mt-2 mx-2",staticStyle:{height:"2px"}}),a("div",[a("div",{staticClass:"text-xl"},[t._v("Student —— Prime Digital Academy")]),a("div",{staticClass:"opacity-50 text-md"},[t._v("Aug. 2017 to Jan. 2018")])])]),a("div",{staticClass:"text-2xl my-3"},[t._v("Education")]),a("div",{staticClass:"flex mb-2"},[a("div",{staticClass:"w-16 bg-blue-600 mt-2 mx-2",staticStyle:{height:"2px"}}),a("div",[a("div",{staticClass:"text-xl"},[t._v("Reed College")]),a("div",{staticClass:"text-lg italic -mb-1"},[t._v("Bachelor of Mathematics")]),a("div",{staticClass:"text-lg italic"},[t._v("Bachelor of Philosophy")]),a("div",{staticClass:"opacity-50 text-md"},[t._v("2012 - 2015")])])]),a("div",{staticClass:"flex mb-2"},[a("div",{staticClass:"w-16 bg-blue-400 mt-2 mx-2",staticStyle:{height:"2px"}}),a("div",[a("div",{staticClass:"text-xl"},[t._v("Deep Springs College")]),a("div",{staticClass:"opacity-50 text-md"},[t._v("2010 - 2012")])])]),a("div",{staticClass:"flex mb-2"},[a("div",{staticClass:"w-16 bg-blue-200 mt-2 mx-2",staticStyle:{height:"2px"}}),a("div",[a("div",{staticClass:"text-xl"},[t._v("University of Minnesota")]),a("div",{staticClass:"text-lg italic"},[t._v("University of Minnesota Talented Youth Mathematics Program")]),a("div",{staticClass:"opacity-50 text-md"},[t._v("2004 - 2008")])])])])}],I=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return Object(o["b"])(e,t),e.prototype.mounted=function(){document.title="Experience"},e=Object(o["a"])([r["a"]],e),e}(r["c"]),E=I,$=E,N=Object(v["a"])($,B,P,!1,null,null,null),A=N.exports,D=function(){var t=this,e=t.$createElement,i=t._self._c||e;return i("div",{staticClass:"p-3"},[i("div",{staticClass:"text-3xl mb-6"},[t._v("My Work")]),t._m(0),t._l(t.projects,(function(e,n){return i("div",{key:n,staticClass:"mb-16"},[i("div",{staticClass:"font-bold text-2xl mb-4"},[t._v(t._s(e.title))]),i("div",{staticClass:"flex justify-between"},[i("div",{staticClass:"flex-shrink-0 cursor-pointer",staticStyle:{width:"700px",height:"500px"},style:{"background-size":"contain","background-repeat":"no-repeat","background-position":"center","background-color":"rgb(60,60,60)",backgroundImage:"url("+a("128e")("./"+e.repo+".png")+")"},on:{click:function(a){return t.clickImg(e)}}}),i("div",{staticClass:"flex flex-col flex-grow ml-6"},[i("div",[t._v(t._s(e.description))]),i("div",{staticClass:"text-xs flex mt-2"},[i("a",{staticClass:"mr-2",attrs:{href:t.getDemoUrl(e),target:"_blank"}},[t._v("Demo")]),i("a",{attrs:{href:t.getRepoUrl(e),target:"_blank"}},[t._v("Source code")])]),i("div",{staticClass:"mt-4 flex"},t._l(e.tags,(function(e){return i("div",{key:e,staticClass:"mr-3 p-2 bg-blue-600 text-white text-xs rounded"},[t._v(" "+t._s(e)+" ")])})),0)])])])}))],2)},U=[function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"p-3 pt-0 italic mb-4"},[a("div",[t._v(' I offer the caveat that many of these might be better described as "experiments", as they tend to lack the polished sheen of finished products. ')]),a("div",{staticClass:"mt-2"},[t._v(" If you are interested in seeing some of the work I've done professionally, check out the following "),a("a",{attrs:{href:"https://www.screenfeed.com",target:"_blank"}},[t._v("Screenfeed")]),t._v(" products: "),a("a",{attrs:{href:"https://www.screenfeed.com/content/weather-graphics",target:"_blank"}},[t._v("Weather Graphics")]),t._v(" and "),a("a",{attrs:{href:"https://www.screenfeed.com/content/alerts",target:"_blank"}},[t._v("Weather Alerts")]),t._v(". ")])])}];const R=[{title:"Shakespeare Text Visualization",repo:"bard",description:"A visual explorer of the text of Shakespeare's plays. User can navigate between plays, scenes and characters, and view interactions between characters and number of lines per character."},{title:"Fourier Transformations",repo:"fourier-canvas",description:"Creating an animation of a crucial step in the Fourier transformation to deepen my mathematical understanding of it.\n        The main insight that drives the Fourier transformation is that any signal can be decomposed into a set of simple sinusoidal elements. \n        In this animation, we're starting with the sinusoidal elements (depicted as a series of circular orbits) and then tracing out the signal that they generate."},{title:"Triangle Centers",repo:"orthocenters",description:"Users can change the triangle by dragging its vertices, changing its incircle and circumcircle (whose centers are the intersection points of the triangle's angle bisectors and orthogonal bisectors, respectively)."},{title:"Game of Life",repo:"game-of-life-quick",description:""},{title:"Minesweeper",repo:"Minesweeper",description:"Building the classic game to practice designing algorithms and building user interfaces."},{title:"Cellular Automata",repo:"cellular-automata",description:"I was enticed to begin playing with cellular automata by the fact that they can generate the Sierpinski triangle. I look forward to exploring more patterns that might emerge from rules even simpler than those that underpin Conway's Game of Life."},{title:"Maze Generation",repo:"maze-generator",description:"Implementing a maze generator with a recursive backtracking algorithm. This was a really fun exercise: I learned a lot about recursion."},{title:"Sonic Boom Animation",repo:"sonic-boom-animation",description:"Animating sound waves as they emanate from moving objects to illustrate both sonic booms and the Doppler Effect."},{title:"Irrational Angles",repo:"irrational-angles",description:"Exploring the patterns that emerge from altering the angle at which leaves spawn, one after the other."},{title:"Recamán's Sequence",repo:"recaman-sequence-visualization",description:"I learned about this sequence and wanted to code a visualization."},{title:"Logarithmic Spiral",repo:"logarithmic-spiral",description:"Illustrating the property of the logarithmic spiral that the angle between the radial line and the tangent is constant."},{title:"Cardioid Animation",repo:"Cardioid-animation",description:"The idea for this animation came from Mathologer's video: https://www.youtube.com/watch?v=qhbuKbxJsk8. The logic comes from there, but the code is my own."},{title:"Perlin Noise Vector Fields",repo:"vector-fields",description:"Building a vector field that objects in the world will obey. Using Perlin noise to determine the direction of each vector. Hopefully I will scale it up to 3 dimensions, ultimately modeling snowfall under lamplight."}];var q=function(t){function e(){var e=null!==t&&t.apply(this,arguments)||this;return e.projects=R,e}return Object(o["b"])(e,t),e.prototype.mounted=function(){document.title="Projects"},e.prototype.getThumbnailStyle=function(t){return{backgroundImage:"url('"+this.getPreviewImageUrl(t)+"')"}},e.prototype.clickImg=function(t){window.location.href=this.getDemoUrl(t)},e.prototype.getDemoUrl=function(t){return"bard"===t.repo?"https://www.webofthebard.com":"https://zackstout.github.io/"+t.repo},e.prototype.getRepoUrl=function(t){return"https://github.com/zackstout/"+t.repo},e.prototype.getPreviewImageUrl=function(t){return t.previewImageUrl?t.previewImageUrl:"~@/assets/projects/"+t.repo+".png"},e=Object(o["a"])([r["a"]],e),e}(r["c"]),L=q,F=L,W=(a("534c"),Object(v["a"])(F,D,U,!1,null,"0638e5e4",null)),z=W.exports,G=function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"p-3"},["/blog"===t.$route.path?a("div",[a("div",{staticClass:"text-3xl mb-6"},[t._v("Blog")]),t._l(t.posts,(function(e){return a("div",{key:e.path,staticClass:"text-2xl mb-3 cursor-pointer hover:opacity-50",on:{click:function(a){return t.clickPost(e)}}},[a("div",[t._v(t._s(e.title))]),a("div",{staticClass:"text-lg opacity-50 italic"},[t._v(" "+t._s(e.subtitle)+" ")])])}))],2):t._e(),a("router-view")],1)},J=[],H=function(t){function e(){var e=null!==t&&t.apply(this,arguments)||this;return e.posts=l,e}return Object(o["b"])(e,t),e.prototype.mounted=function(){document.title="Blog"},e.prototype.clickPost=function(t){this.$router.push({name:t.path.slice(1)}).catch((function(){}))},e=Object(o["a"])([Object(r["a"])({components:{}})],e),e}(r["c"]),V=H,Q=V,Y=(a("8f11"),Object(v["a"])(Q,G,J,!1,null,null,null)),K=Y.exports,X=function(){var t=this,e=t.$createElement;t._self._c;return t._m(0)},Z=[function(){var t=this,e=t.$createElement,i=t._self._c||e;return i("div",[i("div",{staticClass:"flex flex-col items-center"},[i("div",[i("h2",{staticClass:"blogTitle"},[t._v("Combing through Data with Python")])]),i("div",{staticClass:"blogSubtitle"},[t._v("Apr. 8, 2018")])]),i("div",{staticClass:"blogText"},[t._v(" In this post I want to describe how to use the Python library "),i("span",{staticClass:"codeBit"},[t._v("Pandas")]),t._v(" to explore a data-set. I also want to explain how to use "),i("span",{staticClass:"codeBit"},[t._v("urllib")]),t._v(" to ping an API. ")]),i("div",{staticClass:"blogText"},[t._v(" In other words, this post is about how to use Python to interact with existing sets of data -- directly, via CSVs, or indirectly, via an API. In a future post I'll walk through my experience with using Python to scrape the web to generate an original data-set. ")]),i("div",{staticClass:"blogText"},[t._v(" Here's the idea: we'll grab the Bechdel Test data-set from "),i("a",{attrs:{href:"https://github.com/fivethirtyeight/data"}},[t._v("fivethirtyeight")]),t._v(", and then we'll ping the "),i("a",{attrs:{href:"https://omdbapi.com"}},[t._v("OMDB API")]),t._v(" for information about each movie's ratings. (A movie passes the Bechdel test if it depicts two female characters discussing something other than a man.) ")]),i("div",{staticClass:"blogText"},[t._v(" To get started, we'll need to grab our data. One source of easily-accessible data is FiveThirtyEight; the Bechdel data can be found "),i("a",{attrs:{href:"https://github.com/fivethirtyeight/data/tree/master/bechdel"}},[t._v("here")]),t._v(". ")]),i("div",{staticClass:"blogText"},[t._v(" Our data comes in the form of a CSV. Once we've moved the CSV into our project, Pandas makes it simple to read our data: ")]),i("pre",[i("code",[t._v("    import pandas as pd\n    import matplotlib.pyplot as plt\n    df = pd.read_csv('movies.csv')\n    print(df.head())")])]),i("div",{staticClass:"blogText"},[t._v(" This will print out the first five rows of data. Pandas also supplies some awesome ways to preview our data (note that we should only call "),i("span",{staticClass:"codeBit"},[t._v("plt.show")]),t._v(" once): ")]),i("pre",[i("code",[t._v("    from pandas.plotting import scatter_matrix\n    # Box/whisker\n    df.plot(kind='box', subplots=True, layout=(3, 3),\n      sharex=False, sharey=False)\n    plt.show()\n\n    # Histograms\n    df.hist()\n    plt.show()\n\n    # Scatter plot matrix:\n    scatter_matrix(df)\n    plt.show()")])]),i("div",{staticClass:"blogText"},[t._v("Here are the histograms for a different dataset:")]),i("div",[i("img",{staticStyle:{"margin-left":"5%"},attrs:{width:"90%",src:a("bbf7"),alt:""}})]),i("div",{staticClass:"blogText"},[t._v(" Now we can glean what we care about: each movie's IMDB identification string (which we'll use to ping the OMDB API), and whether or not it passes the Bechdel test. We can store this information in a list of objects, or "),i("i",[t._v("dictionaries")]),t._v(". ")]),i("pre",[i("code",[t._v('    imdb_ids = []\n    for index, row in df.iterrows():\n        info = dict()\n        info["id_no"] = row["imdb"]\n        info["result"] = row["binary"]\n        imdb_ids.append(info)')])]),i("div",{staticClass:"blogText"},[t._v(" Next, we'll want to grab each movie's ratings from the OMDB API. There are three sources of ratings (IMDB, Rotten Tomatoes and Metacritic), and we'll need to keep track of where each rating came from, so it will be useful to initialize six arrays ("),i("span",{staticClass:"codeBit"},[t._v("imdb_passes")]),t._v(", "),i("span",{staticClass:"codeBit"},[t._v("imdb_fails")]),t._v(", etc.). ")]),i("pre",[i("code",[t._v('    import urllib.request, urllib.error\n    import json\n\n    for movie in imdb_ids:\n        link = "http://www.omdbapi.com/?apikey=your_key_here&i=%s"\n          % movie["imdb_id"]\n        data = json.load(urllib.request.urlopen(link))\n\n        # Loop through the array of ratings:\n        for rating in data["Ratings"]:\n            if (rating["Source"] == "Rotten Tomatoes"\n              and movie["result"] == "PASS"):\n                val = rating["Value"]\n                # Strip extraneous characters:\n                val = float(val[:find("%")])\n                rt_passes.append(val)\n            elif ...\n          ')])]),i("div",{staticClass:"blogText"},[t._v(" Finally, we need to calculate the average rating from each of our six lists. Python makes this easy: ")]),i("pre",[i("code",[t._v("    rt_pass_avg = sum(rt_passes)/float(len(rt_passes))\n    ...\n  ")])]),i("div",{staticClass:"blogText"},[t._v("Here are the results we get:")]),i("table",{staticClass:"blogText",staticStyle:{"text-align":"center"}},[i("thead",[i("th",[t._v("Source")]),i("th",[t._v("Pass Rating")]),i("th",[t._v("Fail Rating")])]),i("tr",[i("td",[t._v("Rotten Tomatoes")]),i("td",[t._v("60.4%")]),i("td",[t._v("62.5%")])]),i("tr",[i("td",[t._v("IMDB")]),i("td",[t._v("6.62/10")]),i("td",[t._v("6.86/10")])]),i("tr",[i("td",[t._v("Metacritic")]),i("td",[t._v("58.8%")]),i("td",[t._v("69.5%")])])]),i("div",{staticClass:"blogText"},[t._v(" There you have it. Movies that fail the Bechdel test tend to be rated more highly than movies that pass. I'll leave the question of what explains this phenomenon for another time. The point for now is that we can take a data-set, do some analysis on it, and extract a story or a pattern from it. ")]),i("div",{staticClass:"blogText"},[t._v(" Next steps involve the other dimensions of our data set -- we have budgets, years, and reasons for failing the test. The possibilities abound! ")])])}],tt=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return Object(o["b"])(e,t),e=Object(o["a"])([r["a"]],e),e}(r["c"]),et=tt,at=et,it=Object(v["a"])(at,X,Z,!1,null,null,null),nt=it.exports,st=function(){var t=this,e=t.$createElement;t._self._c;return t._m(0)},ot=[function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",[a("div",{staticClass:"flex flex-col items-center"},[a("div",[a("h2",{staticClass:"blogTitle"},[t._v("Writing SQL Queries")])]),a("div",{staticClass:"blogSubtitle"},[t._v("Dec. 15, 2017")])]),a("div",{staticClass:"blogText"},[t._v(" Writing queries to your SQL database is a lot of fun, and pretty intuitive once you get used to the syntax. (We'll use PostgreSQL syntax here.) ")]),a("div",{staticClass:"blogText"},[t._v(" To my mind, the bread and butter of a relational database query is the "),a("span",{staticClass:"codeBit"},[t._v("JOIN")]),t._v(" keyword. Suppose we have one table to keep track of humanitarian projects and another table, keyed to the first table, to keep track of each project's monthly carbon footprint. (Incidentally, this is the group project I'm working on at Prime.) To get all of the footprints associated with a single project, we could write ")]),a("pre",[a("code",[t._v('    SELECT * FROM "projects" JOIN "footprints"\n        ON "projects"."id" = "footprints"."project_id"\n        WHERE "projects"."id" = 1;')])]),a("div",{staticClass:"blogText"},[t._v(" The "),a("span",{staticClass:"codeBit"},[t._v("ON")]),t._v(' clause ensures that we grab all of the footprints that have a project_id value equal to the id of the project we are interested in. A potential problem with this is that we might have identically-named columns in different tables (e.g. "id"). To remedy this, we can replace '),a("span",{staticClass:"codeBit"},[t._v("*")]),t._v(" in our "),a("span",{staticClass:"codeBit"},[t._v("SELECT")]),t._v(" clause with "),a("span",{staticClass:"codeBit"},[t._v('"footprints"."id" as footprint_id, "projects"."id" as project_id, "living_total", "shipping_total", "travel_total"')]),t._v(". ")]),a("div",{staticClass:"blogText"},[t._v(" Our footprints table might have many rows; suppose we want to sum up the values in each column across all rows. We could write ")]),a("pre",[a("code",[t._v('    SELECT SUM("living_total") as living_total,\n        SUM("travel_total") as travel_total,\n        SUM("shipping_total") as shipping_total\n        FROM "footprints";')])]),a("div",{staticClass:"blogText"},[t._v(" If we want to sum the values across columns, we can write "),a("span",{staticClass:"codeBit"},[t._v('SUM("travel_total" + "shipping_total" + "living_total") as "total_footprint"')]),t._v(". ")]),a("div",{staticClass:"blogText"},[t._v(" Suppose that instead of summing all the rows, we wanted to group them into clusters, for instance by footprint Type. We can pair the "),a("span",{staticClass:"codeBit"},[t._v("SUM")]),t._v(" keyword with "),a("span",{staticClass:"codeBit"},[t._v("PARTITION BY")]),t._v(" to accomplish that: "),a("span",{staticClass:"codeBit"},[t._v('SELECT SUM("living_total") OVER (PARTITION BY "type")')]),t._v(". ")]),a("div",{staticClass:"blogText"},[t._v(" Suppose we have three other tables, Shipping, Living and Travel, each keyed to our Footprints table. In order to post a new footprint to the database, we need to update each table. In our query from the server, we would first post to the Footprints table, adding "),a("span",{staticClass:"codeBit"},[t._v('RETURNING "id"')]),t._v(" to our "),a("span",{staticClass:"codeBit"},[t._v("INSERT INTO")]),t._v(" query. Then we can pass the returned id along to the next query, which posts to our three subtables with the proper foreign key. ")]),a("div",{staticClass:"blogText"},[t._v(" Finally, suppose we want to get, for each project, an array of all the footprint totals associated with it. The query would look something like this: ")]),a("pre",[a("code",[t._v('    SELECT "projects"."name" as name,\n        array_agg("footprint_total") as total\n        FROM "projects" JOIN "footprints"\n        ON "projects"."id" = "footprints"."project_id"\n        GROUP BY "projects"."name";')])])])}],rt=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return Object(o["b"])(e,t),e=Object(o["a"])([r["a"]],e),e}(r["c"]),lt=rt,ct=lt,pt=Object(v["a"])(ct,st,ot,!1,null,null,null),ut=pt.exports,dt=function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",[t._m(0),t._m(1),t._m(2),a("div",{staticClass:"blogText"},[t._v(" The following code will add a falling square and a static circle to the canvas. To start off, we can add a few abbreviations to save some time later on: ")]),t._m(3),a("div",{staticClass:"blogText"},[t._v("Then we can add a few bodies ...")]),t._m(4),t._m(5),t._m(6),t._m(7),a("div",{staticClass:"blogText"},[t._v("After we create our engine and our world, and start our engine, we're ready to draw:")]),t._m(8),t._m(9),t._m(10),t._m(11),t._m(12),t._m(13),t._m(14),a("pre",[a("code",{attrs:{id:"hardCode"}},[t._v(t._s(t.loopText))])]),t._m(15),t._m(16),a("div",{staticClass:"blogText"},[t._v("The possibilities sprawl before us!")])])},ht=[function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"flex flex-col items-center"},[a("div",[a("h2",{staticClass:"blogTitle"},[t._v("Getting Started with Matter.js")])]),a("div",{staticClass:"blogSubtitle"},[t._v("Dec. 12, 2017")])])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"blogText"},[t._v(" Matter.js is a super fun physics library with excellent documentation ("),a("a",{attrs:{href:"http://brm.io/matter-js/docs/"}},[t._v("Matter.js")]),t._v(") that can be easily added into a project. Simply "),a("span",{staticClass:"codeBit"},[t._v("npm install matter-js")]),t._v(" and source matter.min.js into your index. ")])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"blogText"},[t._v(" I've found it easier to get Matter.js up and running when I use it in conjunction with "),a("a",{attrs:{href:"http://p5js.org"}},[t._v("p5.js")]),t._v(" to draw bodies on the canvas. Matter.js can be broken into two functional components: an engine for calculating all the physics, and a renderer for drawing bodies on the canvas. Instead of using Matter's built-in renderer, we can use p5. (Just run another "),a("span",{staticClass:"codeBit"},[t._v("npm install")]),t._v(" and source it in). ")])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("pre",[a("code",[t._v("    var Engine = Matter.Engine;\n    var World = Matter.World;\n    var Bodies = Matter.Bodies;")])])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("pre",[a("code",[t._v("    var box1 = Bodies.rectangle(200, 100, 20, 20);\n    var omega = Bodies.circle(500, 500, 100, {isStatic: true});")])])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"blogText"},[t._v(" The last (optional) argument passed to the shape constructor is an "),a("span",{staticClass:"codeBit"},[t._v("options")]),t._v(" object. Setting "),a("span",{staticClass:"codeBit"},[t._v("isStatic")]),t._v(" to 'true' makes the body immobile; if we set "),a("span",{staticClass:"codeBit"},[t._v("isSensor")]),t._v(" to 'true', the body won't participate in any collisions. ")])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"blogText"},[t._v(" But we mustn't forget to "),a("span",{staticClass:"codeBit"},[t._v("add")]),t._v(" the bodies to our "),a("span",{staticClass:"codeBit"},[t._v("world")]),t._v("! p5.js asks for two things: a "),a("span",{staticClass:"codeBit"},[t._v("setup")]),t._v(" function to tell it how to render the initial page, and a "),a("span",{staticClass:"codeBit"},[t._v("draw")]),t._v(" function to tell it how to update the canvas as time goes on: ")])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("pre",[a("code",[t._v("    function setup() {\n      var canvas = createCanvas(1000,1000);\n      var engine = Engine.create();\n      var world = engine.world;\n      World.add(world, [box1, omega]);\n      Engine.run(engine);\n    }")])])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("pre",[a("code",[t._v("    function draw() {\n      background(251);\n      rect(box1.position.x, box1.position.y, 20, 20);\n      ellipse(omega.position.x, omega.position.y, 200);\n    }")])])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"blogText"},[t._v(" We reset the background with every iteration of the "),a("span",{staticClass:"codeBit"},[t._v("draw")]),t._v(" function in order to clear the previous renderings — otherwise we end up with space-time worms roaming through our canvas. ")])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"blogText"},[t._v(" An important thing to note when using p5.js in conjunction with Matter.js is that they keep track of bodies differently. For instance, p5's "),a("span",{staticClass:"codeBit"},[t._v("ellipse")]),t._v(" function asks for the body's diameter, whereas Matter's "),a("span",{staticClass:"codeBit"},[t._v("circle")]),t._v(" function asks for the body's radius. Another example of this misalignment is that Matter tracks the position of rectangles by their centers, while p5 (as well as vanilla canvas) tracks them by their upper-left corners. ")])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"blogText"},[t._v(" At this point, the possibilities proliferate. With "),a("span",{staticClass:"codeBit"},[t._v("Matter.Mouse")]),t._v(" and "),a("span",{staticClass:"codeBit"},[t._v("Matter.MouseConstraint")]),t._v(", you can allow the user to interact with your world's bodies. With "),a("span",{staticClass:"codeBit"},[t._v("Matter.Events")]),t._v(" you can listen for collisions. With "),a("span",{staticClass:"codeBit"},[t._v("Matter.Constraint")]),t._v(" you can attach bodies to each other. Matter even lets you alter the world's gravity (with "),a("span",{staticClass:"codeBit"},[t._v("world.gravity.y")]),t._v(")! ")])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"blogText"},[t._v(" And p5 is no slouch. It offers "),a("span",{staticClass:"codeBit"},[t._v("mouseClicked")]),t._v(" and "),a("span",{staticClass:"codeBit"},[t._v("mouseDragged")]),t._v(" functions that make it easy to interact with the canvas. If you add an array to your global scope... ")])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("pre",[a("code",[t._v("    var balls = [];")])])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"blogText"},[t._v("...and then add a loop into your "),a("span",{staticClass:"codeBit"},[t._v("draw")]),t._v(" function...:")])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"blogText"},[t._v(" ...then finally, you can add a "),a("span",{staticClass:"codeBit"},[t._v("mouseDragged")]),t._v(" function like so: ")])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("pre",[a("code",[t._v("   function mouseDragged() {\n      var randomNum = Math.random()*50;\n      var ball = Bodies.circle(mouseX, mouseY, randomNum);\n      ball.circleRadius = randomNum/2;\n      World.add(world, ball);\n      balls.push(ball);\n    }")])])}],vt=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return Object(o["b"])(e,t),Object.defineProperty(e.prototype,"loopText",{get:function(){return"    for (var i=0; i<balls.length; i++){\n      var ball = balls[i]; \n      ellipse(ball.position.x, ball.position.y,\n\t   ball.circleRadius);\n    }"},enumerable:!1,configurable:!0}),e=Object(o["a"])([r["a"]],e),e}(r["c"]),ft=vt,gt=ft,mt=Object(v["a"])(gt,dt,ht,!1,null,null,null),bt=mt.exports,_t={Post1:nt,Post2:ut,Post3:bt};i["a"].use(x["a"]),i["a"].config.productionTip=!1;var wt=new x["a"]({mode:"history",routes:[{path:"/",redirect:"/about"},{name:"about",path:"/about",component:O},{name:"resume",path:"/resume",component:A},{name:"blog",path:"/blog",component:K,children:l.map((function(t){return{path:t.path.slice(1),component:_t[t.fileName],name:t.path.slice(1)}}))},{name:"projects",path:"/projects",component:z}]});new i["a"]({router:wt,render:function(t){return t(y)}}).$mount("#app")},e72d:function(t,e,a){t.exports=a.p+"img/sonic-boom-animation.424224aa.png"},eb53:function(t,e,a){t.exports=a.p+"img/Screen Shot 2021-04-18 at 6.53.41 PM.3190f859.png"},f291:function(t,e,a){t.exports=a.p+"img/Screen Shot 2021-04-18 at 6.53.07 PM.435d0c14.png"},f5cc:function(t,e,a){t.exports=a.p+"img/face2.b3ab8ec9.jpg"},f7c3:function(t,e,a){t.exports=a.p+"img/Screen Shot 2021-04-18 at 6.53.53 PM.d12677b9.png"}});
//# sourceMappingURL=app.2c1aed55.js.map