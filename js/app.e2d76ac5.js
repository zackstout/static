(function(t){function e(e){for(var i,o,r=e[0],l=e[1],c=e[2],d=0,u=[];d<r.length;d++)o=r[d],Object.prototype.hasOwnProperty.call(n,o)&&n[o]&&u.push(n[o][0]),n[o]=0;for(i in l)Object.prototype.hasOwnProperty.call(l,i)&&(t[i]=l[i]);h&&h(e);while(u.length)u.shift()();return s.push.apply(s,c||[]),a()}function a(){for(var t,e=0;e<s.length;e++){for(var a=s[e],i=!0,r=1;r<a.length;r++){var l=a[r];0!==n[l]&&(i=!1)}i&&(s.splice(e--,1),t=o(o.s=a[0]))}return t}var i={},n={app:0},s=[];function o(e){if(i[e])return i[e].exports;var a=i[e]={i:e,l:!1,exports:{}};return t[e].call(a.exports,a,a.exports,o),a.l=!0,a.exports}o.m=t,o.c=i,o.d=function(t,e,a){o.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:a})},o.r=function(t){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},o.t=function(t,e){if(1&e&&(t=o(t)),8&e)return t;if(4&e&&"object"===typeof t&&t&&t.__esModule)return t;var a=Object.create(null);if(o.r(a),Object.defineProperty(a,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var i in t)o.d(a,i,function(e){return t[e]}.bind(null,i));return a},o.n=function(t){var e=t&&t.__esModule?function(){return t["default"]}:function(){return t};return o.d(e,"a",e),e},o.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},o.p="/";var r=window["webpackJsonp"]=window["webpackJsonp"]||[],l=r.push.bind(r);r.push=e,r=r.slice();for(var c=0;c<r.length;c++)e(r[c]);var h=l;s.push([0,"chunk-vendors"]),a()})({0:function(t,e,a){t.exports=a("cd49")},"0715":function(t,e,a){var i={"./1000.png":"de8a","./200-min.png":"2bc2","./200.png":"b3f0","./400.png":"f1d7","./600-min.png":"df5b","./600.png":"8264","./800.png":"9cca"};function n(t){var e=s(t);return a(e)}function s(t){if(!a.o(i,t)){var e=new Error("Cannot find module '"+t+"'");throw e.code="MODULE_NOT_FOUND",e}return i[t]}n.keys=function(){return Object.keys(i)},n.resolve=s,t.exports=n,n.id="0715"},"083b":function(t,e,a){t.exports=a.p+"img/mandlebrot.8b38d964.png"},"0954":function(t,e,a){t.exports=a.p+"img/Screen Shot 2021-04-18 at 6.55.16 PM.ce299b69.png"},"0e72":function(t,e,a){t.exports=a.p+"img/game-of-life-quick.bcf0b9e5.png"},"0f98":function(t,e,a){t.exports=a.p+"img/Screen Shot 2021-04-18 at 6.54.18 PM.aadb0c74.png"},"128e":function(t,e,a){var i={"./Cardioid-animation.png":"794d","./Minesweeper.png":"a2dd","./Screen Shot 2021-04-18 at 6.53.07 PM.png":"f291","./Screen Shot 2021-04-18 at 6.53.41 PM.png":"eb53","./Screen Shot 2021-04-18 at 6.53.53 PM.png":"f7c3","./Screen Shot 2021-04-18 at 6.54.18 PM.png":"0f98","./Screen Shot 2021-04-18 at 6.55.16 PM.png":"0954","./Screen Shot 2021-04-18 at 6.55.37 PM.png":"a9ac","./Screen Shot 2021-04-18 at 6.56.03 PM.png":"275d","./Screen Shot 2021-04-18 at 6.56.37 PM.png":"7e1e","./Screen Shot 2021-04-18 at 6.56.53 PM.png":"aca3","./Screen Shot 2021-04-18 at 6.57.55 PM.png":"396a","./Screen Shot 2021-04-18 at 6.59.38 PM.png":"acf2","./bard.png":"aeb2","./cellular-automata.png":"8a44","./fourier-canvas.png":"22be","./game-of-life-quick.png":"0e72","./irrational-angles.png":"6a1e","./logarithmic-spiral.png":"7c56","./maze-generator.png":"c906","./orthocenters.png":"8151","./recaman-sequence-visualization.png":"9052","./sonic-boom-animation.png":"e72d","./vector-fields.png":"8a0f"};function n(t){var e=s(t);return a(e)}function s(t){if(!a.o(i,t)){var e=new Error("Cannot find module '"+t+"'");throw e.code="MODULE_NOT_FOUND",e}return i[t]}n.keys=function(){return Object.keys(i)},n.resolve=s,t.exports=n,n.id="128e"},"220d":function(t,e,a){},"22be":function(t,e,a){t.exports=a.p+"img/fourier-canvas.4b60921c.png"},"275d":function(t,e,a){t.exports=a.p+"img/Screen Shot 2021-04-18 at 6.56.03 PM.5af65025.png"},"2bbe":function(t,e,a){t.exports=a.p+"img/github_icon.76d344f0.svg"},"2bc2":function(t,e,a){t.exports=a.p+"img/200-min.ad010648.png"},"30e5":function(t,e,a){"use strict";a("a041")},"32d9":function(t,e,a){"use strict";a("8c8c")},"396a":function(t,e,a){t.exports=a.p+"img/Screen Shot 2021-04-18 at 6.57.55 PM.a5d64b8c.png"},"3ae9":function(t,e,a){"use strict";a("ce67")},"463c":function(t,e,a){"use strict";a("d6c0")},"472b":function(t,e,a){t.exports=a.p+"img/linkedin_icon.30c453b7.png"},"500b":function(t,e,a){t.exports=a.p+"img/bromiliad2 2.0129a794.jpg"},5465:function(t,e,a){},5507:function(t,e,a){},"550e":function(t,e,a){"use strict";a("220d")},"6a1e":function(t,e,a){t.exports=a.p+"img/irrational-angles.b5e5f1f2.png"},"6bc0":function(t,e,a){t.exports=a.p+"img/zoom.6f9e30fa.png"},"710a":function(t,e,a){var i={"./bromiliad 2.jpg":"c8c2","./bromiliad.jpg":"c051","./bromiliad2 2.jpg":"500b","./bromiliad2.jpg":"7ec6","./face.jpg":"753c","./face1.jpg":"7766","./face2.jpg":"f5cc","./succulent 2.jpg":"b568","./succulent.jpg":"b180"};function n(t){var e=s(t);return a(e)}function s(t){if(!a.o(i,t)){var e=new Error("Cannot find module '"+t+"'");throw e.code="MODULE_NOT_FOUND",e}return i[t]}n.keys=function(){return Object.keys(i)},n.resolve=s,t.exports=n,n.id="710a"},"753c":function(t,e,a){t.exports=a.p+"img/face.dacb550e.jpg"},7766:function(t,e,a){t.exports=a.p+"img/face1.e467745f.jpg"},"794d":function(t,e,a){t.exports=a.p+"img/Cardioid-animation.ac7ddff8.png"},"7c56":function(t,e,a){t.exports=a.p+"img/logarithmic-spiral.87a3deda.png"},"7e1e":function(t,e,a){t.exports=a.p+"img/Screen Shot 2021-04-18 at 6.56.37 PM.617d56f8.png"},"7ec6":function(t,e,a){t.exports=a.p+"img/bromiliad2.0129a794.jpg"},8151:function(t,e,a){t.exports=a.p+"img/orthocenters.495ded06.png"},8264:function(t,e,a){t.exports=a.p+"img/600.d60ff120.png"},"8a0f":function(t,e,a){t.exports=a.p+"img/vector-fields.aab9380e.png"},"8a44":function(t,e,a){t.exports=a.p+"img/cellular-automata.a20525a6.png"},"8c8c":function(t,e,a){},"8f11":function(t,e,a){"use strict";a("9a0e")},9052:function(t,e,a){t.exports=a.p+"img/recaman-sequence-visualization.32f0fca4.png"},"9a0e":function(t,e,a){},"9cca":function(t,e,a){t.exports=a.p+"img/800.9f5c9416.png"},a041:function(t,e,a){},a2dd:function(t,e,a){t.exports=a.p+"img/Minesweeper.04e31ad7.png"},a5d2:function(t,e,a){"use strict";a("5465")},a9ac:function(t,e,a){t.exports=a.p+"img/Screen Shot 2021-04-18 at 6.55.37 PM.1721bf91.png"},aca3:function(t,e,a){t.exports=a.p+"img/Screen Shot 2021-04-18 at 6.56.53 PM.a44312b9.png"},acf2:function(t,e,a){t.exports=a.p+"img/Screen Shot 2021-04-18 at 6.59.38 PM.17890830.png"},aeb2:function(t,e,a){t.exports=a.p+"img/bard.aa8f1c09.png"},b180:function(t,e,a){t.exports=a.p+"img/succulent.8f7b93b0.jpg"},b3f0:function(t,e,a){t.exports=a.p+"img/200.a7bfceb8.png"},b568:function(t,e,a){t.exports=a.p+"img/succulent 2.8f7b93b0.jpg"},ba8c:function(t,e,a){},bbf7:function(t,e,a){t.exports=a.p+"img/histograms.e208f589.png"},c051:function(t,e,a){t.exports=a.p+"img/bromiliad.e169e485.jpg"},c8c2:function(t,e,a){t.exports=a.p+"img/bromiliad 2.e169e485.jpg"},c906:function(t,e,a){t.exports=a.p+"img/maze-generator.abc4cb3d.png"},cd49:function(t,e,a){"use strict";a.r(e);var i=a("2b0e"),n=function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",[t.showSidebar?a("div",{staticClass:"relative w-full h-full",attrs:{id:"app"}},[a("div",{staticClass:"bg-gray-100",attrs:{id:"sidebar"}},[t._l(t.sideNavs,(function(e){return a("div",{key:e.label,staticClass:"side-nav",class:[t.$route.path.includes(e.path)?"bg-blue-400 font-bold text-white":"hover:bg-blue-200 "],on:{click:function(a){t.$router.push({name:e.path}).catch((function(){}))}}},[t._v(" "+t._s(e.label)+" ")])})),t.$route.path.includes("/blog")?a("div",{staticClass:"mt-2"},t._l(t.posts,(function(e){return a("div",{key:e.path,staticClass:"mb-2 cursor-pointer px-3 py-2 flex items-center leading-none",class:[t.$route.path.includes(e.path.slice(1))?"font-bold":"hover:opacity-50"],on:{click:function(a){t.$router.push({name:e.path.slice(1)}).catch((function(){}))}}},[a("div",{staticClass:"h-2 w-2 mr-3 ml-3 flex-shrink-0 bg-blue-400"}),a("div",{domProps:{innerHTML:t._s(t.getTitle(e.title))}})])})),0):t._e()],2),a("div",{class:[t.themeLight?"bg-white text-gray-800":"bg-blue-800 text-white"],attrs:{id:"main"}},[a("router-view")],1)]):a("div",[a("router-view")],1)])},s=[],o=a("9ab4"),r=a("1b40");const l=[{title:"Combing through Data with Python",subtitle:"Apr. 8, 2018",fileName:"Post1",path:"/python_combing"},{title:"Writing SQL Queries",subtitle:"Dec. 15, 2017",fileName:"Post2",path:"/sql_queries"},{title:"Getting Started with Matter.js",subtitle:"Dec. 12, 2017",fileName:"Post3",path:"/matter_js"},{title:"Getting Started with Socket.io",subtitle:"Feb. 20, 2018",fileName:"Post4",path:"/socket_io"},{title:"Cardioid Animation",subtitle:"Jan. 27, 2018",fileName:"Post9",path:"/cardioid"},{title:"The Mandelbrot Set",subtitle:"Jan. 20, 2018",fileName:"Post10",path:"/mandlebrot"},{title:"Greek Tragedy: On Becoming Oneself",subtitle:"Jan. 14, 2018",fileName:"Post16",path:"/greek_tragedy"},{title:"Self-Conception as Carapace",subtitle:"Jan. 8, 2018",fileName:"Post17",path:"/self_conception"},{title:"Rilke's Archaic Torso of Apollo",subtitle:"Jan. 15, 2018",fileName:"Post18",path:"/archaic_torso"}];var c=function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("button",{staticClass:"flex-shrink-0 group relative rounded-full inline-flex items-center justify-center h-5 w-10 cursor-pointer focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blaze-teal",attrs:{type:"button","aria-pressed":"false"},on:{click:function(e){return t.$emit("click")}}},[a("span",{staticClass:"pointer-events-none absolute bg-white w-full h-full rounded-md",attrs:{"aria-hidden":"true"}}),a("span",{staticClass:"pointer-events-none absolute h-4 w-9 mx-auto rounded-full transition-colors ease-in-out duration-100",class:{"bg-blaze-teal":t.selected,"bg-gray-200":!t.selected},attrs:{"aria-hidden":"true"}}),a("span",{staticClass:"pointer-events-none absolute left-0 inline-block h-5 w-5 border border-gray-300 rounded-full bg-white shadow transform ring-0 transition-transform ease-in-out duration-100",class:{"translate-x-5":t.selected,"translate-x-0":!t.selected},attrs:{"aria-hidden":"true"}})])},h=[],d=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return Object(o["b"])(e,t),Object(o["a"])([Object(r["b"])(Boolean)],e.prototype,"selected",void 0),e=Object(o["a"])([r["a"]],e),e}(r["c"]),u=d,v=u,p=a("2877"),f=Object(p["a"])(v,c,h,!1,null,null,null),g=f.exports,m=function(t){function e(){var e=null!==t&&t.apply(this,arguments)||this;return e.posts=l,e.sideNavs=[{label:"About",path:"about"},{label:"Experience",path:"resume"},{label:"Projects",path:"projects"},{label:"Blog",path:"blog"}],e.themeLight=!0,e}return Object(o["b"])(e,t),e.prototype.getTitle=function(t){return t.includes("Rilke")?"<span>Rilke's</span> <span class='italic'>Archaic Torso of Apollo</span>":t},e.prototype.toggleTheme=function(){this.themeLight=!this.themeLight,console.log("toggle",this.themeLight)},Object.defineProperty(e.prototype,"showSidebar",{get:function(){return!this.$route.path.includes("jeopardy")},enumerable:!1,configurable:!0}),e=Object(o["a"])([Object(r["a"])({components:{ToggleButton:g}})],e),e}(r["c"]),b=m,_=b,y=(a("a5d2"),Object(p["a"])(_,n,s,!1,null,null,null)),w=y.exports,x=(a("ba8c"),a("8c4f")),C=function(){var t=this,e=t.$createElement,i=t._self._c||e;return i("div",{staticClass:"p-3 flex lg:flex-col flex-wrap lg:flex-nowrap justify-between",staticStyle:{"min-height":"95vh"}},[i("div",[i("div",{staticClass:"text-3xl mb-6"},[t._v("About")]),i("div",{staticClass:"w-full flex justify-between text-xl space-x-8"},[t._m(0),i("div",{staticStyle:{width:"1000px",height:"500px","background-size":"contain","background-repeat":"no-repeat","background-position":"top center"},style:{backgroundImage:"url("+a("710a")("./"+t.bgImg+".jpg")+")"},on:{click:t.updateBg}})])]),t._m(1)])},k=[function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",[a("p",{staticClass:"p"},[t._v(" I am a web developer living in Minneapolis, Minnesota. ")]),a("p",{staticClass:"p"},[t._v(" My passions include math, puzzles, Greek tragedy and games. And most recently I have discovered that I love to SCUBA dive! 🐟 🐠 ✨ ")]),a("p",{staticClass:"p"},[t._v(" I enjoy trying to think creatively and analytically. I feel so lucky to have found development; there is no satisfaction like finally reaching a solution to a tough problem. I hope to make a positive impact on the world through software development. ")]),a("p",{staticClass:"p"},[t._v(" I have a wonderful dog named Apollo. ")])])},function(){var t=this,e=t.$createElement,i=t._self._c||e;return i("div",[i("hr",{staticClass:"my-2"}),i("div",{staticClass:"text-xs flex justify-center space-x-8"},[i("div",{staticClass:"flex items-center my-1 cursor-pointer hover:opacity-50"},[i("div",{staticClass:"h-3 w-3 mr-2"},[i("img",{attrs:{src:a("2bbe")}})]),i("a",{attrs:{href:"https://github.com/zackstout",target:"_blank"}},[t._v("/zackstout")])]),i("div",{staticClass:"flex items-center cursor-pointer hover:opacity-50"},[i("div",{staticClass:"h-3 w-3 mr-2"},[i("img",{attrs:{src:a("472b")}})]),i("a",{attrs:{href:"https://linkedin.com/in/zack-stout-01",target:"_blank"}},[t._v("/zack-stout-01")])])])])}],T=function(t){function e(){var e=null!==t&&t.apply(this,arguments)||this;return e.bgImgNum=1,e}return Object(o["b"])(e,t),Object.defineProperty(e.prototype,"bgImg",{get:function(){return"face"},enumerable:!1,configurable:!0}),e.prototype.updateBg=function(){1===this.bgImgNum?this.bgImgNum=2:this.bgImgNum=1},e.prototype.mounted=function(){document.title="About"},e=Object(o["a"])([r["a"]],e),e}(r["c"]),S=T,j=S,B=(a("463c"),Object(p["a"])(j,C,k,!1,null,"2633b272",null)),I=B.exports,P=function(){var t=this,e=t.$createElement;t._self._c;return t._m(0)},O=[function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"p-3"},[a("div",{staticClass:"text-3xl mb-6"},[t._v("Experience")]),a("div",{staticClass:"text-2xl my-3"},[t._v("Career History")]),a("div",{staticClass:"flex mb-2"},[a("div",{staticClass:"bg-green-600 line"}),a("div",[a("div",{staticClass:"text-xl"},[t._v("Front End Developer —— Screenfeed")]),a("div",{staticClass:"time-text"},[t._v("Oct. 2018 to Present")])])]),a("div",{staticClass:"flex mb-2"},[a("div",{staticClass:"bg-green-400 line"}),a("div",[a("div",{staticClass:"text-xl"},[t._v("Web Development Teaching Assistant —— University of Minnesota")]),a("div",{staticClass:"time-text"},[t._v("Feb. 2018 to Oct. 2018")])])]),a("div",{staticClass:"flex mb-2"},[a("div",{staticClass:"bg-green-200 line"}),a("div",[a("div",{staticClass:"text-xl"},[t._v("Student —— Prime Digital Academy")]),a("div",{staticClass:"time-text"},[t._v("Aug. 2017 to Jan. 2018")])])]),a("div",{staticClass:"text-2xl my-3"},[t._v("Education")]),a("div",{staticClass:"flex mb-2"},[a("div",{staticClass:"bg-blue-600 line"}),a("div",[a("div",{staticClass:"text-xl"},[t._v("Reed College")]),a("div",{staticClass:"text-lg italic -mb-1"},[t._v("Bachelor of Mathematics")]),a("div",{staticClass:"text-lg italic"},[t._v("Bachelor of Philosophy")]),a("div",{staticClass:"time-text"},[t._v("2012 - 2015")])])]),a("div",{staticClass:"flex mb-2"},[a("div",{staticClass:"bg-blue-400 line"}),a("div",[a("div",{staticClass:"text-xl"},[t._v("Deep Springs College")]),a("div",{staticClass:"time-text"},[t._v("2010 - 2012")])])]),a("div",{staticClass:"flex mb-2"},[a("div",{staticClass:"bg-blue-200 line"}),a("div",[a("div",{staticClass:"text-xl"},[t._v("University of Minnesota")]),a("div",{staticClass:"text-lg italic"},[t._v("University of Minnesota Talented Youth Mathematics Program")]),a("div",{staticClass:"time-text"},[t._v("2004 - 2008")])])])])}],M=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return Object(o["b"])(e,t),e.prototype.mounted=function(){document.title="Experience"},e=Object(o["a"])([r["a"]],e),e}(r["c"]),E=M,$=E,A=(a("ff6a"),Object(p["a"])($,P,O,!1,null,"09625923",null)),z=A.exports,W=function(){var t=this,e=t.$createElement,i=t._self._c||e;return i("div",{staticClass:"p-3"},[i("div",{staticClass:"text-3xl mb-6"},[t._v("My Work")]),t._m(0),t._l(t.projects,(function(e,n){return i("div",{key:n,staticClass:"mb-16"},[i("div",{staticClass:"font-bold text-2xl mb-4"},[t._v(t._s(e.title))]),i("div",{staticClass:"flex justify-between"},[i("div",{staticClass:"flex-shrink-0 cursor-pointer",staticStyle:{width:"700px",height:"500px"},style:{"background-size":"contain","background-repeat":"no-repeat","background-position":"center","background-color":"rgb(60,60,60)",backgroundImage:"url("+a("128e")("./"+e.repo+".png")+")"},on:{click:function(a){return t.clickImg(e)}}}),i("div",{staticClass:"flex flex-col flex-grow ml-6"},[i("div",[t._v(t._s(e.description))]),i("div",{staticClass:"text-xs flex mt-2"},[i("a",{staticClass:"mr-2",attrs:{href:t.getDemoUrl(e),target:"_blank"}},[t._v("Demo")]),i("a",{attrs:{href:t.getRepoUrl(e),target:"_blank"}},[t._v("Source code")])]),i("div",{staticClass:"mt-4 flex"},t._l(e.tags,(function(e){return i("div",{key:e,staticClass:"mr-3 px-2 py-1 bg-blue-400 text-white text-xs rounded"},[t._v(" "+t._s(e)+" ")])})),0)])])])}))],2)},D=[function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"p-3 pt-0 italic mb-4"},[a("div",[t._v(' I offer the caveat that many of these might be better described as "experiments", as they tend to lack the polished sheen of finished products. ')]),a("div",{staticClass:"mt-2"},[t._v(" If you are interested in seeing some of the work I've done professionally, check out the following "),a("a",{attrs:{href:"https://www.screenfeed.com",target:"_blank"}},[t._v("Screenfeed")]),t._v(" products: "),a("a",{attrs:{href:"https://www.screenfeed.com/content/weather-graphics",target:"_blank"}},[t._v("Weather Graphics")]),t._v(" and "),a("a",{attrs:{href:"https://www.screenfeed.com/content/alerts",target:"_blank"}},[t._v("Weather Alerts")]),t._v(". ")])])}];const N=[{title:"Shakespeare Text Visualization",repo:"bard",description:"A visual explorer of the text of Shakespeare's plays. User can navigate between plays, scenes and characters, and view interactions between characters and number of lines per character.",tags:["d3","Vue","Node.js"]},{title:"Fourier Transformations",repo:"fourier-canvas",description:"Creating an animation of a crucial step in the Fourier transformation to deepen my mathematical understanding of it.\n        The main insight that drives the Fourier transformation is that any signal can be decomposed into a set of simple sinusoidal elements. \n        In this animation, we're starting with the sinusoidal elements (depicted as a series of circular orbits) and then tracing out the signal that they generate.",tags:["canvas"]},{title:"Triangle Centers",repo:"orthocenters",tags:["canvas"],description:"Users can change the triangle by dragging its vertices, changing its incircle and circumcircle (whose centers are the intersection points of the triangle's angle bisectors and orthogonal bisectors, respectively)."},{title:"Game of Life",repo:"game-of-life-quick",tags:["canvas"],description:"A quick implementation of Conway's Game of Life."},{title:"Minesweeper",repo:"Minesweeper",tags:["canvas"],description:"Building the classic game to practice designing algorithms and building user interfaces."},{title:"Cellular Automata",repo:"cellular-automata",tags:["canvas"],description:"I was enticed to begin playing with cellular automata by the fact that they can generate the Sierpinski triangle. I look forward to exploring more patterns that might emerge from rules even simpler than those that underpin Conway's Game of Life."},{title:"Maze Generation",repo:"maze-generator",tags:["canvas"],description:"Implementing a maze generator with a recursive backtracking algorithm. This was a really fun exercise: I learned a lot about recursion."},{title:"Sonic Boom Animation",repo:"sonic-boom-animation",tags:["canvas"],description:"Animating sound waves as they emanate from moving objects to illustrate both sonic booms and the Doppler Effect."},{title:"Irrational Angles",repo:"irrational-angles",tags:["canvas"],description:"Exploring the patterns that emerge from altering the angle at which leaves spawn."},{title:"Recamán's Sequence",repo:"recaman-sequence-visualization",tags:["canvas"],description:"I learned about this sequence and wanted to code a visualization."},{title:"Logarithmic Spiral",repo:"logarithmic-spiral",tags:["canvas"],description:"Illustrating the property of the logarithmic spiral that the angle between the radial line and the tangent is constant."},{title:"Cardioid Animation",repo:"Cardioid-animation",tags:["canvas"],description:"The idea for this animation came from Mathologer's video: https://www.youtube.com/watch?v=qhbuKbxJsk8. The logic comes from there, but the code is my own."},{title:"Perlin Noise Vector Fields",repo:"vector-fields",tags:["canvas"],description:"Building a vector field that objects in the world will obey. Using Perlin noise to determine the direction of each vector. Hopefully I will scale it up to 3 dimensions, ultimately modeling snowfall under lamplight."}];var L=function(t){function e(){var e=null!==t&&t.apply(this,arguments)||this;return e.projects=N,e}return Object(o["b"])(e,t),e.prototype.mounted=function(){document.title="Projects"},e.prototype.getThumbnailStyle=function(t){return{backgroundImage:"url('"+this.getPreviewImageUrl(t)+"')"}},e.prototype.clickImg=function(t){window.location.href=this.getDemoUrl(t)},e.prototype.getDemoUrl=function(t){return"bard"===t.repo?"https://www.webofthebard.com":"https://zackstout.github.io/"+t.repo},e.prototype.getRepoUrl=function(t){return"https://github.com/zackstout/"+t.repo},e.prototype.getPreviewImageUrl=function(t){return t.previewImageUrl?t.previewImageUrl:"~@/assets/projects/"+t.repo+".png"},e=Object(o["a"])([r["a"]],e),e}(r["c"]),q=L,R=q,F=(a("3ae9"),Object(p["a"])(R,W,D,!1,null,"b3c50de6",null)),J=F.exports,G=function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{attrs:{id:"jeopardy-app"}},[a("div",{attrs:{id:"header"}},[t._v("JEOPARDY")]),a("div",{attrs:{id:"grid"}},t._l(t.categoryQuestions,(function(e){return a("div",{staticClass:"category"},[a("div",{staticClass:"cell cell-title"},[t._v(t._s(e.name))]),t._l(e.questions,(function(e){return a("div",{staticClass:"cell cell-question",on:{click:t.clickQuestion}},[a("div",{staticClass:"cell-question-inner"},[a("div",{staticClass:"front"},[t._v("$"+t._s(e.value))]),a("div",{staticClass:"back"},[a("div",{staticClass:"back-inner",class:{"bg-image":e.isImage},style:t.getCardStyle(e),domProps:{textContent:t._s(e.isImage?"":e.text)}})])])])}))],2)})),0)])},H=[],U=[{name:"More Famous Than Paul Bunyan",questions:[{value:200,text:"You don’t want to wrestle this former Minnesotan politician, or you might get bodied."},{value:400,text:"This famous handy man turned snitch had a two-year, 4 month vacation in a Sandstone, MN correctional facility."},{value:600,text:"St Louis Park, Minnesota may be No Country for Old Men, but it was the birth place of this movie making duo (who are indeed old men)."},{value:800,text:"This Jazz Age author wasn’t born on This Side of Paradise but he was born in St Paul in 1896."},{value:1e3,text:"This actress, born Frances Ethel Gumm, lived through a whirlwind of a life before passing in 1969 at age 47."}]},{name:"Double Trouble",questions:[{value:200,text:"Over 850,000 visitors come to see this area annually. This location is spectacular even in the winter, but less exciting in a drought."},{value:400,text:"Spend a day on the town in this suburb where you can ride a roller coaster, bet on a horse, and visit your Aunt Ruth in Minnesota’s only women’s prison."},{value:600,text:"Shop till you drop in this Minnesota city that is home to the country’s largest indoor shopping center."},{value:800,text:"Hike around waterfalls, see some falcons, do some rock climbing, and jump in Lake Superior in this state park located off of scenic highway 61."},{value:1e3,text:"This outspoken Minnesotan politician, a major figure in the Tea Party movement, went from the US House of Reps to running for president in 2012, but lost the Republican Nomination to Mitt Romney."}]},{name:"GDP (Groovy Domestic Products)",questions:[{value:200,text:"Malus Pamila, was developed at the University of Minnesota in 1974, can be baked into pies but is known for being eaten plain and raw."},{value:400,text:"These kinds of cakes are missing their middle and their pans were invented in St Louis Park, MN."},{value:600,text:"This candy bar’s tastes reach out of this world with nougat, caramel, and chocolate."},{value:800,text:"When cabin pressure drops, you’ll be thankful for Minnesotans who invented this device found on airplanes."},{value:1e3,text:"In 1966, Minneapolis was the birthplace of this game that you might not be comfortable playing with strangers."}]},{name:"Mni Sota Makoce",questions:[{value:200,text:"This grain, known as Mahnonmin in Ojibwe has been a staple grain for many in the Great Lakes Region."},{value:400,text:"Unlike the tipi, this structure was a more permanent type of dwelling popularized by the Ojibwe tribe."},{value:600,text:"The Dakota used milk to demonstrate the meaning of Mnisota, which can be roughly translated to this."},{value:800,text:"Lake White Earth is the translated name for this popular Minnesotan lake."},{value:1e3,text:"A national monument, this site is in Southwestern Minnesota and is a former quarry used by several tribes to create the object in its name."}]},{name:"Geography",questions:[{value:200,text:"This city is the 3 rd largest by population in the state and sits outside the Twin Cities metro area."},{value:400,text:"At 2,301 feet this is the highest point in Minnesota and is located near the Boundary Waters."},{value:600,text:"Minnesota has 3 types of Koppen climates, however they fall under this type of climate family."},{value:800,text:"This former large glacial lake was larger than all the Great Lakes Combined and covered much of northern Minnesota"},{value:1e3,text:"This is the most popular lake name in Minnesota, with 201 lakes sharing this name."}]},{name:"iMNages",questions:[{value:200,text:"Looks like Christmas came early!",isImage:!0},{value:400,text:"Did I stutter, Megan?",isImage:!0},{value:600,text:"A good steering wheel that doesn't fly off while you're driving.",isImage:!0},{value:800,text:"I am doing the best at this.",isImage:!0},{value:1e3,text:"You admit it yourself that you suck.",isImage:!0}]}],V=function(t){function e(){var e=null!==t&&t.apply(this,arguments)||this;return e.categoryQuestions=U,e.gridPosition={x:0,y:0,w:0,h:0},e}return Object(o["b"])(e,t),e.prototype.mounted=function(){var t,e=this,i=null===(t=document.getElementById("grid"))||void 0===t?void 0:t.getBoundingClientRect();this.gridPosition.x=(null===i||void 0===i?void 0:i.x)||0,this.gridPosition.y=(null===i||void 0===i?void 0:i.y)||0,this.gridPosition.w=(null===i||void 0===i?void 0:i.width)||0,this.gridPosition.h=(null===i||void 0===i?void 0:i.height)||0,console.log(U,this.gridPosition),window.addEventListener("resize",(function(){var t,a=null===(t=document.getElementById("grid"))||void 0===t?void 0:t.getBoundingClientRect();e.gridPosition.x=(null===a||void 0===a?void 0:a.x)||0,e.gridPosition.y=(null===a||void 0===a?void 0:a.y)||0,e.gridPosition.w=(null===a||void 0===a?void 0:a.width)||0,e.gridPosition.h=(null===a||void 0===a?void 0:a.height)||0})),[200,400,600,800,1e3].forEach((function(t){var e=new Image;e.src=a("0715")("./"+t+".png"),e.onload=function(){console.log("Loaded 'er up!")}}))},e.prototype.getCardStyle=function(t){return t.isImage?{backgroundImage:'url("'+this.getImageSrc(t)+'")'}:{}},e.prototype.getImageSrc=function(t){var e=[200,600].includes(t.value)?"-min":"";return console.log(e),a("0715")("./"+t.value+e+".png")},e.prototype.clickQuestion=function(t){var e=t.target.getBoundingClientRect(),a=Array.from(t.target.classList).some((function(t){return"back-inner"===t})),i=a?t.target.parentElement.parentElement:t.target.parentElement;if(Array.from(i.classList).some((function(t){return t.includes("inner")}))){if("true"===i.dataset.flipped)return i.style.display="none",i.parentElement.style.background="linear-gradient(to top left, #0000ca, #0000ff)",void(i.parentElement.style.zIndex="0");i.style.transition="all 0.8s",i.dataset.flipped="true",i.querySelector(".back").style.width=this.gridPosition.w+"px";var n=this.gridPosition.x-e.x,s=this.gridPosition.y-e.y;i.style.transform="rotateY(180deg) translate("+-n+"px, "+s+"px)",i.style.width=this.gridPosition.w+"px",i.style.height=this.gridPosition.h+"px",i.parentElement.style.zIndex=1e3}},e=Object(o["a"])([Object(r["a"])({components:{}})],e),e}(r["c"]),Y=V,Q=Y,K=(a("30e5"),Object(p["a"])(Q,G,H,!1,null,null,null)),Z=K.exports,X=function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"p-3"},["/blog"===t.$route.path?a("div",[a("div",{staticClass:"text-3xl mb-6"},[t._v("Blog")]),t._l(t.posts,(function(e){return a("div",{key:e.path,staticClass:"text-2xl mb-3 cursor-pointer hover:opacity-50",on:{click:function(a){return t.clickPost(e)}}},[a("div",[t._v(t._s(e.title))]),a("div",{staticClass:"text-lg opacity-50 italic"},[t._v(" "+t._s(e.subtitle)+" ")])])}))],2):t._e(),a("router-view")],1)},tt=[],et=a("1315"),at=function(t){function e(){var e=null!==t&&t.apply(this,arguments)||this;return e.posts=l.sort((function(t,e){var a=et["DateTime"].fromJSDate(new Date(t.subtitle)),i=et["DateTime"].fromJSDate(new Date(e.subtitle));return Number(i)-Number(a)})),e}return Object(o["b"])(e,t),e.prototype.mounted=function(){document.title="Blog"},e.prototype.clickPost=function(t){this.$router.push({name:t.path.slice(1)}).catch((function(){}))},e=Object(o["a"])([Object(r["a"])({components:{}})],e),e}(r["c"]),it=at,nt=it,st=(a("8f11"),Object(p["a"])(nt,X,tt,!1,null,null,null)),ot=st.exports,rt=function(){var t=this,e=t.$createElement;t._self._c;return t._m(0)},lt=[function(){var t=this,e=t.$createElement,i=t._self._c||e;return i("div",[i("div",{staticClass:"flex flex-col items-center"},[i("div",[i("h2",{staticClass:"blogTitle"},[t._v("Combing through Data with Python")])]),i("div",{staticClass:"blogSubtitle"},[t._v("Apr. 8, 2018")])]),i("div",{staticClass:"blogText"},[t._v(" In this post I want to describe how to use the Python library "),i("span",{staticClass:"codeBit"},[t._v("Pandas")]),t._v(" to explore a data-set. I also want to explain how to use "),i("span",{staticClass:"codeBit"},[t._v("urllib")]),t._v(" to ping an API. ")]),i("div",{staticClass:"blogText"},[t._v(" In other words, this post is about how to use Python to interact with existing sets of data -- directly, via CSVs, or indirectly, via an API. In a future post I'll walk through my experience with using Python to scrape the web to generate an original data-set. ")]),i("div",{staticClass:"blogText"},[t._v(" Here's the idea: we'll grab the Bechdel Test data-set from "),i("a",{attrs:{href:"https://github.com/fivethirtyeight/data"}},[t._v("fivethirtyeight")]),t._v(", and then we'll ping the "),i("a",{attrs:{href:"https://omdbapi.com"}},[t._v("OMDB API")]),t._v(" for information about each movie's ratings. (A movie passes the Bechdel test if it depicts two female characters discussing something other than a man.) ")]),i("div",{staticClass:"blogText"},[t._v(" To get started, we'll need to grab our data. One source of easily-accessible data is FiveThirtyEight; the Bechdel data can be found "),i("a",{attrs:{href:"https://github.com/fivethirtyeight/data/tree/master/bechdel"}},[t._v("here")]),t._v(". ")]),i("div",{staticClass:"blogText"},[t._v(" Our data comes in the form of a CSV. Once we've moved the CSV into our project, Pandas makes it simple to read our data: ")]),i("pre",[i("code",[t._v("    import pandas as pd\n    import matplotlib.pyplot as plt\n    df = pd.read_csv('movies.csv')\n    print(df.head())")])]),i("div",{staticClass:"blogText"},[t._v(" This will print out the first five rows of data. Pandas also supplies some awesome ways to preview our data (note that we should only call "),i("span",{staticClass:"codeBit"},[t._v("plt.show")]),t._v(" once): ")]),i("pre",[i("code",[t._v("    from pandas.plotting import scatter_matrix\n    # Box/whisker\n    df.plot(kind='box', subplots=True, layout=(3, 3),\n      sharex=False, sharey=False)\n    plt.show()\n\n    # Histograms\n    df.hist()\n    plt.show()\n\n    # Scatter plot matrix:\n    scatter_matrix(df)\n    plt.show()")])]),i("div",{staticClass:"blogText"},[t._v("Here are the histograms for a different dataset:")]),i("div",[i("img",{staticStyle:{"margin-left":"5%"},attrs:{width:"90%",src:a("bbf7"),alt:""}})]),i("div",{staticClass:"blogText"},[t._v(" Now we can glean what we care about: each movie's IMDB identification string (which we'll use to ping the OMDB API), and whether or not it passes the Bechdel test. We can store this information in a list of objects, or "),i("i",[t._v("dictionaries")]),t._v(". ")]),i("pre",[i("code",[t._v('    imdb_ids = []\n    for index, row in df.iterrows():\n        info = dict()\n        info["id_no"] = row["imdb"]\n        info["result"] = row["binary"]\n        imdb_ids.append(info)')])]),i("div",{staticClass:"blogText"},[t._v(" Next, we'll want to grab each movie's ratings from the OMDB API. There are three sources of ratings (IMDB, Rotten Tomatoes and Metacritic), and we'll need to keep track of where each rating came from, so it will be useful to initialize six arrays ("),i("span",{staticClass:"codeBit"},[t._v("imdb_passes")]),t._v(", "),i("span",{staticClass:"codeBit"},[t._v("imdb_fails")]),t._v(", etc.). ")]),i("pre",[i("code",[t._v('    import urllib.request, urllib.error\n    import json\n\n    for movie in imdb_ids:\n        link = "http://www.omdbapi.com/?apikey=your_key_here&i=%s"\n          % movie["imdb_id"]\n        data = json.load(urllib.request.urlopen(link))\n\n        # Loop through the array of ratings:\n        for rating in data["Ratings"]:\n            if (rating["Source"] == "Rotten Tomatoes"\n              and movie["result"] == "PASS"):\n                val = rating["Value"]\n                # Strip extraneous characters:\n                val = float(val[:find("%")])\n                rt_passes.append(val)\n            elif ...\n          ')])]),i("div",{staticClass:"blogText"},[t._v(" Finally, we need to calculate the average rating from each of our six lists. Python makes this easy: ")]),i("pre",[i("code",[t._v("    rt_pass_avg = sum(rt_passes)/float(len(rt_passes))\n    ...\n  ")])]),i("div",{staticClass:"blogText"},[t._v("Here are the results we get:")]),i("table",{staticClass:"blogText",staticStyle:{"text-align":"center"}},[i("thead",[i("th",[t._v("Source")]),i("th",[t._v("Pass Rating")]),i("th",[t._v("Fail Rating")])]),i("tr",[i("td",[t._v("Rotten Tomatoes")]),i("td",[t._v("60.4%")]),i("td",[t._v("62.5%")])]),i("tr",[i("td",[t._v("IMDB")]),i("td",[t._v("6.62/10")]),i("td",[t._v("6.86/10")])]),i("tr",[i("td",[t._v("Metacritic")]),i("td",[t._v("58.8%")]),i("td",[t._v("69.5%")])])]),i("div",{staticClass:"blogText"},[t._v(" There you have it. Movies that fail the Bechdel test tend to be rated more highly than movies that pass. I'll leave the question of what explains this phenomenon for another time. The point for now is that we can take a data-set, do some analysis on it, and extract a story or a pattern from it. ")]),i("div",{staticClass:"blogText"},[t._v(" Next steps involve the other dimensions of our data set -- we have budgets, years, and reasons for failing the test. The possibilities abound! ")])])}],ct=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return Object(o["b"])(e,t),e=Object(o["a"])([r["a"]],e),e}(r["c"]),ht=ct,dt=ht,ut=Object(p["a"])(dt,rt,lt,!1,null,null,null),vt=ut.exports,pt=function(){var t=this,e=t.$createElement;t._self._c;return t._m(0)},ft=[function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",[a("div",{staticClass:"flex flex-col items-center"},[a("div",[a("h2",{staticClass:"blogTitle"},[t._v("Writing SQL Queries")])]),a("div",{staticClass:"blogSubtitle"},[t._v("Dec. 15, 2017")])]),a("div",{staticClass:"blogText"},[t._v(" Writing queries to your SQL database is a lot of fun, and pretty intuitive once you get used to the syntax. (We'll use PostgreSQL syntax here.) ")]),a("div",{staticClass:"blogText"},[t._v(" To my mind, the bread and butter of a relational database query is the "),a("span",{staticClass:"codeBit"},[t._v("JOIN")]),t._v(" keyword. Suppose we have one table to keep track of humanitarian projects and another table, keyed to the first table, to keep track of each project's monthly carbon footprint. (Incidentally, this is the group project I'm working on at Prime.) To get all of the footprints associated with a single project, we could write ")]),a("pre",[a("code",[t._v('    SELECT * FROM "projects" JOIN "footprints"\n        ON "projects"."id" = "footprints"."project_id"\n        WHERE "projects"."id" = 1;')])]),a("div",{staticClass:"blogText"},[t._v(" The "),a("span",{staticClass:"codeBit"},[t._v("ON")]),t._v(' clause ensures that we grab all of the footprints that have a project_id value equal to the id of the project we are interested in. A potential problem with this is that we might have identically-named columns in different tables (e.g. "id"). To remedy this, we can replace '),a("span",{staticClass:"codeBit"},[t._v("*")]),t._v(" in our "),a("span",{staticClass:"codeBit"},[t._v("SELECT")]),t._v(" clause with "),a("span",{staticClass:"codeBit"},[t._v('"footprints"."id" as footprint_id, "projects"."id" as project_id, "living_total", "shipping_total", "travel_total"')]),t._v(". ")]),a("div",{staticClass:"blogText"},[t._v(" Our footprints table might have many rows; suppose we want to sum up the values in each column across all rows. We could write ")]),a("pre",[a("code",[t._v('    SELECT SUM("living_total") as living_total,\n        SUM("travel_total") as travel_total,\n        SUM("shipping_total") as shipping_total\n        FROM "footprints";')])]),a("div",{staticClass:"blogText"},[t._v(" If we want to sum the values across columns, we can write "),a("span",{staticClass:"codeBit"},[t._v('SUM("travel_total" + "shipping_total" + "living_total") as "total_footprint"')]),t._v(". ")]),a("div",{staticClass:"blogText"},[t._v(" Suppose that instead of summing all the rows, we wanted to group them into clusters, for instance by footprint Type. We can pair the "),a("span",{staticClass:"codeBit"},[t._v("SUM")]),t._v(" keyword with "),a("span",{staticClass:"codeBit"},[t._v("PARTITION BY")]),t._v(" to accomplish that: "),a("span",{staticClass:"codeBit"},[t._v('SELECT SUM("living_total") OVER (PARTITION BY "type")')]),t._v(". ")]),a("div",{staticClass:"blogText"},[t._v(" Suppose we have three other tables, Shipping, Living and Travel, each keyed to our Footprints table. In order to post a new footprint to the database, we need to update each table. In our query from the server, we would first post to the Footprints table, adding "),a("span",{staticClass:"codeBit"},[t._v('RETURNING "id"')]),t._v(" to our "),a("span",{staticClass:"codeBit"},[t._v("INSERT INTO")]),t._v(" query. Then we can pass the returned id along to the next query, which posts to our three subtables with the proper foreign key. ")]),a("div",{staticClass:"blogText"},[t._v(" Finally, suppose we want to get, for each project, an array of all the footprint totals associated with it. The query would look something like this: ")]),a("pre",[a("code",[t._v('    SELECT "projects"."name" as name,\n        array_agg("footprint_total") as total\n        FROM "projects" JOIN "footprints"\n        ON "projects"."id" = "footprints"."project_id"\n        GROUP BY "projects"."name";')])])])}],gt=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return Object(o["b"])(e,t),e=Object(o["a"])([r["a"]],e),e}(r["c"]),mt=gt,bt=mt,_t=Object(p["a"])(bt,pt,ft,!1,null,null,null),yt=_t.exports,wt=function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",[t._m(0),t._m(1),t._m(2),a("div",{staticClass:"blogText"},[t._v(" The following code will add a falling square and a static circle to the canvas. To start off, we can add a few abbreviations to save some time later on: ")]),t._m(3),a("div",{staticClass:"blogText"},[t._v("Then we can add a few bodies ...")]),t._m(4),t._m(5),t._m(6),t._m(7),a("div",{staticClass:"blogText"},[t._v("After we create our engine and our world, and start our engine, we're ready to draw:")]),t._m(8),t._m(9),t._m(10),t._m(11),t._m(12),t._m(13),t._m(14),a("pre",[a("code",{attrs:{id:"hardCode"}},[t._v(t._s(t.loopText))])]),t._m(15),t._m(16),a("div",{staticClass:"blogText"},[t._v("The possibilities sprawl before us!")])])},xt=[function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"flex flex-col items-center"},[a("div",[a("h2",{staticClass:"blogTitle"},[t._v("Getting Started with Matter.js")])]),a("div",{staticClass:"blogSubtitle"},[t._v("Dec. 12, 2017")])])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"blogText"},[t._v(" Matter.js is a super fun physics library with excellent documentation ("),a("a",{attrs:{href:"http://brm.io/matter-js/docs/"}},[t._v("Matter.js")]),t._v(") that can be easily added into a project. Simply "),a("span",{staticClass:"codeBit"},[t._v("npm install matter-js")]),t._v(" and source matter.min.js into your index. ")])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"blogText"},[t._v(" I've found it easier to get Matter.js up and running when I use it in conjunction with "),a("a",{attrs:{href:"http://p5js.org"}},[t._v("p5.js")]),t._v(" to draw bodies on the canvas. Matter.js can be broken into two functional components: an engine for calculating all the physics, and a renderer for drawing bodies on the canvas. Instead of using Matter's built-in renderer, we can use p5. (Just run another "),a("span",{staticClass:"codeBit"},[t._v("npm install")]),t._v(" and source it in). ")])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("pre",[a("code",[t._v("    var Engine = Matter.Engine;\n    var World = Matter.World;\n    var Bodies = Matter.Bodies;")])])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("pre",[a("code",[t._v("    var box1 = Bodies.rectangle(200, 100, 20, 20);\n    var omega = Bodies.circle(500, 500, 100, {isStatic: true});")])])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"blogText"},[t._v(" The last (optional) argument passed to the shape constructor is an "),a("span",{staticClass:"codeBit"},[t._v("options")]),t._v(" object. Setting "),a("span",{staticClass:"codeBit"},[t._v("isStatic")]),t._v(" to 'true' makes the body immobile; if we set "),a("span",{staticClass:"codeBit"},[t._v("isSensor")]),t._v(" to 'true', the body won't participate in any collisions. ")])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"blogText"},[t._v(" But we mustn't forget to "),a("span",{staticClass:"codeBit"},[t._v("add")]),t._v(" the bodies to our "),a("span",{staticClass:"codeBit"},[t._v("world")]),t._v("! p5.js asks for two things: a "),a("span",{staticClass:"codeBit"},[t._v("setup")]),t._v(" function to tell it how to render the initial page, and a "),a("span",{staticClass:"codeBit"},[t._v("draw")]),t._v(" function to tell it how to update the canvas as time goes on: ")])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("pre",[a("code",[t._v("    function setup() {\n      var canvas = createCanvas(1000,1000);\n      var engine = Engine.create();\n      var world = engine.world;\n      World.add(world, [box1, omega]);\n      Engine.run(engine);\n    }")])])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("pre",[a("code",[t._v("    function draw() {\n      background(251);\n      rect(box1.position.x, box1.position.y, 20, 20);\n      ellipse(omega.position.x, omega.position.y, 200);\n    }")])])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"blogText"},[t._v(" We reset the background with every iteration of the "),a("span",{staticClass:"codeBit"},[t._v("draw")]),t._v(" function in order to clear the previous renderings — otherwise we end up with space-time worms roaming through our canvas. ")])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"blogText"},[t._v(" An important thing to note when using p5.js in conjunction with Matter.js is that they keep track of bodies differently. For instance, p5's "),a("span",{staticClass:"codeBit"},[t._v("ellipse")]),t._v(" function asks for the body's diameter, whereas Matter's "),a("span",{staticClass:"codeBit"},[t._v("circle")]),t._v(" function asks for the body's radius. Another example of this misalignment is that Matter tracks the position of rectangles by their centers, while p5 (as well as vanilla canvas) tracks them by their upper-left corners. ")])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"blogText"},[t._v(" At this point, the possibilities proliferate. With "),a("span",{staticClass:"codeBit"},[t._v("Matter.Mouse")]),t._v(" and "),a("span",{staticClass:"codeBit"},[t._v("Matter.MouseConstraint")]),t._v(", you can allow the user to interact with your world's bodies. With "),a("span",{staticClass:"codeBit"},[t._v("Matter.Events")]),t._v(" you can listen for collisions. With "),a("span",{staticClass:"codeBit"},[t._v("Matter.Constraint")]),t._v(" you can attach bodies to each other. Matter even lets you alter the world's gravity (with "),a("span",{staticClass:"codeBit"},[t._v("world.gravity.y")]),t._v(")! ")])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"blogText"},[t._v(" And p5 is no slouch. It offers "),a("span",{staticClass:"codeBit"},[t._v("mouseClicked")]),t._v(" and "),a("span",{staticClass:"codeBit"},[t._v("mouseDragged")]),t._v(" functions that make it easy to interact with the canvas. If you add an array to your global scope... ")])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("pre",[a("code",[t._v("    var balls = [];")])])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"blogText"},[t._v("...and then add a loop into your "),a("span",{staticClass:"codeBit"},[t._v("draw")]),t._v(" function...:")])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"blogText"},[t._v(" ...then finally, you can add a "),a("span",{staticClass:"codeBit"},[t._v("mouseDragged")]),t._v(" function like so: ")])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("pre",[a("code",[t._v("   function mouseDragged() {\n      var randomNum = Math.random()*50;\n      var ball = Bodies.circle(mouseX, mouseY, randomNum);\n      ball.circleRadius = randomNum/2;\n      World.add(world, ball);\n      balls.push(ball);\n    }")])])}],Ct=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return Object(o["b"])(e,t),Object.defineProperty(e.prototype,"loopText",{get:function(){return"    for (var i=0; i<balls.length; i++){\n      var ball = balls[i]; \n      ellipse(ball.position.x, ball.position.y,\n\t   ball.circleRadius);\n    }"},enumerable:!1,configurable:!0}),e=Object(o["a"])([r["a"]],e),e}(r["c"]),kt=Ct,Tt=kt,St=Object(p["a"])(Tt,wt,xt,!1,null,null,null),jt=St.exports,Bt=function(){var t=this,e=t.$createElement;t._self._c;return t._m(0)},It=[function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",[a("div",{staticClass:"flex flex-col items-center"},[a("div",[a("h2",{staticClass:"blogTitle"},[t._v("Getting Started with Socket.io")])]),a("div",{staticClass:"blogSubtitle"},[t._v("Feb. 20, 2018")])]),a("div",{staticClass:"blogText"},[t._v(" Phew, it's been a while since my last post! It's been an exciting challenge to balance the tasks of learning, building, searching for a job, and writing. ")]),a("div",{staticClass:"blogText"},[t._v(" Anyways, using "),a("a",{attrs:{href:"https://socket.io/"}},[t._v("Socket.io")]),t._v(" is fun and pretty intuitive once you get the hang of it. ")]),a("div",{staticClass:"blogText"},[t._v(" As I understand it, a web socket is an immediate and continuous connection between a server and the various clients that are pinging it. This means that we can update each user's client based on information in the server — without the user needing to refresh their browser. ")]),a("div",{staticClass:"blogText"},[t._v(" I learned Socket.io by building a simple 1-v-1 game, Tic-Tac-Toe. Users can see a list of other users online, can send and accept invitations to play games, and claim victory against their opponents. ")]),a("div",{staticClass:"blogText"},[t._v(" To start, "),a("span",{staticClass:"codeBit"},[t._v("npm install express socket.io --save")]),t._v(". Then spin up your app with some boilerplate code: ")]),a("pre",[a("code",[t._v("var express = require('express');\nvar app = express();\nvar http = require('http').Server(app);\nvar io = require('socket.io')(http);\n\napp.get('/', function(req, res){\n  res.sendFile(__dirname + '/index.html');\n});\n\nhttp.listen(3000, function(){\n  console.log('listening on *:3000');\n});")])]),a("div",{staticClass:"blogText"},[t._v(" Then we can declare a global function, "),a("span",{staticClass:"codeBit"},[t._v("io.on('connection', function(socket){ });")]),t._v(", inside of which we can place our socket controllers, like so: ")]),a("pre",[a("code",[t._v("  socket.on('logon', function() {\n    userIds.push(socket.id);\n    io.emit('ids', userIds);\n  });")])]),a("div",{staticClass:"blogText"},[t._v(" These functions may take in parameters (data from the client-side event that triggers the server-side socket event-handler), but they needn't. In this case, we're grabbing the ID assigned to this particular client-server socket connection and storing it in a global array. Finally, we "),a("span",{staticClass:"codeBit"},[t._v("emit")]),t._v(" back to each client a response: in this case, the array of all online users. ")]),a("div",{staticClass:"blogText"},[t._v(" Note that we call the event 'ids' here so that we can pick it up on the client-side by using the same name. Similarly, we call the triggering event 'logon', so that we can specify its trigger on the client-side. ")]),a("div",{staticClass:"blogText"},[t._v(" Our client-side code looks something like this: ")]),a("pre",[a("code",[t._v("    <script src=\"/socket.io/socket.io.js\"><\/script>\n    <script>\n      $(function () {\n        var socket = io();\n        socket.emit('logon');\n      });\n    <\/script>")])]),a("div",{staticClass:"blogText"},[t._v(" Whenever a user visits the site, pinging the server, a socket-connection is initiated, and the client "),a("span",{staticClass:"codeBit"},[t._v("emits")]),t._v(" to the server, triggering the 'logon' event-handler. As we saw above, this initiates a process on the server that "),a("span",{staticClass:"codeBit"},[t._v("emits")]),t._v(" back out to each client an updated list of online users. ")]),a("div",{staticClass:"blogText"},[t._v(" We'll want to update this list when a user disconnects as well ('disconnect' is a keyword in Socket.io: we don't have to define this event on the client-side): ")]),a("pre",[a("code",[t._v("  socket.on('disconnect', function(){\n    userIds.splice(userIds.indexOf(socket.id), 1);\n    io.emit('ids', userIds);\n  });")])]),a("div",{staticClass:"blogText"},[t._v(" The next step would be to handle the 'ids' event we wrote earlier (in the server) on the client-side. We do this in exactly the same way that we handled, on the server-side, events triggered by the client. We write "),a("span",{staticClass:"codeBit"},[t._v("socket.on('ids', function(allIds) { });")]),t._v(", and inside our callback function we manipulate the page based on the data received from the server ('allIds'). In this case, we want to append a list of all online users (excluding the current user, who we identify with "),a("span",{staticClass:"codeBit"},[t._v("socket.id")]),t._v(") to the DOM, and an 'Invite' button for each user. ")]),a("div",{staticClass:"blogText"},[t._v(" That's pretty much all there is to it. Events on the client-side — user clicks to make a move ('X' or 'O'), or to submit their move, or accept an invitation to play — are handled on the server, which in turn emit events back out to clients (all clients or a specific client). Data can be passed back and forth with each event, as arguments to our event-handling callback functions. ")]),a("div",{staticClass:"blogText"},[t._v(" In our case, we want to pass the game-state back and forth between one client, the server, and the other client (their opponent). We update the game-state in the server (in a game object that is saved in a global array of all current games) after each user makes a move, and then update the other client. ")]),a("div",{staticClass:"blogText"},[t._v(" Check out my "),a("a",{attrs:{href:"https://github.com/zackstout/Tic-Tac-Toe-final"}},[t._v("GitHub repo")]),t._v(" for the full code! ")])])}],Pt=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return Object(o["b"])(e,t),e=Object(o["a"])([r["a"]],e),e}(r["c"]),Ot=Pt,Mt=Ot,Et=Object(p["a"])(Mt,Bt,It,!1,null,null,null),$t=Et.exports,At=function(){var t=this,e=t.$createElement;t._self._c;return t._m(0)},zt=[function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",[a("div",{staticClass:"flex flex-col items-center"},[a("div",[a("h2",{staticClass:"blogTitle"},[t._v("Building Snake")])]),a("div",{staticClass:"blogSubtitle"},[t._v("Jan. 13, 2018")])]),a("div",{staticClass:"blogText"},[t._v("Let's build Snake using JavaScript! (I know, I should have written it in Python...)")]),a("div",{staticClass:"blogText"},[t._v(" First we'll need a grid. The code here is quite similar to what I used to build a "),a("span",{staticClass:"linkage",attrs:{"ng-click":"cc.goToPost(10)"}},[t._v("Minesweeper")]),t._v(" grid. Instead of adding a "),a("span",{staticClass:"codeBit"},[t._v("<button>")]),t._v(" to each "),a("span",{staticClass:"codeBit"},[t._v("<td>")]),t._v(", we add a "),a("span",{staticClass:"codeBit"},[t._v("<div>")]),t._v(". But just as before, we give it an "),a("span",{staticClass:"codeBit"},[t._v("id")]),t._v(" to keep track of its position and a class to color it blue. ")]),a("div",{staticClass:"blogText"},[t._v(" Next we'll need a snake. We can start by drawing a 4-length snake emerging from the top of the playing field: ")]),a("pre",[a("code",{attrs:{layout:"","layout-align":"center center"}},[t._v("        var snake = [{r: 0, c: 4}, {r: 1, c: 4}, {r: 2, c: 4}, {r: 3, c: 4}];\n      var direction = 'd';")])]),a("div",{staticClass:"blogText"},[t._v("In order to color our snake, we can alter each "),a("span",{staticClass:"codeBit"},[t._v("div")]),t._v("'s class:")]),a("pre",[a("code",{attrs:{layout:"","layout-align":"center center"}},[t._v("     snake.forEach(function(cell) {\n      var name = 'col' + cell.c + 'row' + cell.r;\n      var el = document.getElementById(name);\n      el.className = 'snakeLive';\n    });")])]),a("div",{staticClass:"blogText"},[t._v(" How do we move our snake? The key insight is that to move forward one step, you cut off the snake's current tail and move it to the position of the new head (which depends on which direction the snake is moving). So in a function called "),a("span",{staticClass:"codeBit"},[t._v("changeSnake()")]),t._v(", we change the tail back to blue, remove it from the "),a("span",{staticClass:"codeBit"},[t._v("snake")]),t._v(" array, and then "),a("span",{staticClass:"codeBit"},[t._v("push")]),t._v(" the new head onto that array: ")]),a("pre",[a("code",{attrs:{layout:"","layout-align":"center center"}},[t._v("        var name1 = 'col' + tail.c + 'row' + tail.r;\n      document.getElementById(name1).className = 'snakeCell';\n\n      tail = snake.shift();\n      head = snake[snake.length - 1];\n      snake.push(newHead);")])]),a("div",{staticClass:"blogText"},[t._v(" For example, if the snake were moving downward we would set the "),a("span",{staticClass:"codeBit"},[t._v("newHead")]),t._v(" with ")]),a("pre",[a("code",{attrs:{layout:"","layout-align":"center center"}},[t._v("newHead = {\n  r: head.r + 1,\n  c: head.c\n      };")])]),a("div",{staticClass:"blogText"},[t._v(" To keep track of the user's input for the snake's direction, we use a "),a("span",{staticClass:"codeBit"},[t._v("switch")]),t._v(" statement to check whether the user has most recently pressed the "),a("i",[t._v("a")]),t._v(", "),a("i",[t._v("s")]),t._v(", "),a("i",[t._v("d")]),t._v(" or "),a("i",[t._v("w")]),t._v(" key: ")]),a("pre",[a("code",{attrs:{layout:"","layout-align":"center center"}},[t._v("    window.onkeydown = function(e) {\n        switch(e.keyCode) {\n          case 83:\n          direction = 'd';\n          break;\n          . . .\n      })")])]),a("div",{staticClass:"blogText"},[t._v(" Finally, we add apples and lengthen our snake when it's fed. The code for this is fairly simple if you've followed along so far. ")]),a("div",{staticClass:"blogText"},[t._v("To run our game, we write something like")]),a("pre",[a("code",{attrs:{layout:"","layout-align":"center center"}},[t._v("        vm.startSnake = function() {\n        snakeInt = setInterval(changeSnake, 230);\n      };")])]),a("div",{staticClass:"blogText"},[t._v(" Woohoo! We've got Snake! There are a few bugs — the snake can cross itself, and apples can spawn inside of it — but our game works mostly as intended. In fact, it would be a fun challenge to calculate the expected number of apples we could eat before spawning one inside the snake. (Remember, use the "),a("i",[t._v("a")]),t._v(", "),a("i",[t._v("s")]),t._v(", "),a("i",[t._v("w")]),t._v(" and "),a("i",[t._v("d")]),t._v(" keys to navigate.) ")]),a("br"),a("div",{attrs:{layout:"","layout-align":"center center"}},[a("table",{attrs:{id:"snakeTable"}}),a("button",{attrs:{"ng-click":"cc.startSnake()"}},[t._v("Start!")])])])}],Wt=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return Object(o["b"])(e,t),e=Object(o["a"])([r["a"]],e),e}(r["c"]),Dt=Wt,Nt=Dt,Lt=Object(p["a"])(Nt,At,zt,!1,null,null,null),qt=Lt.exports,Rt=function(){var t=this,e=t.$createElement;t._self._c;return t._m(0)},Ft=[function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",[a("div",{staticClass:"flex flex-col items-center"},[a("div",[a("h2",{staticClass:"blogTitle"},[t._v("Building Minesweeper")])]),a("div",{staticClass:"blogSubtitle"},[t._v("Jan. 6, 2018")])]),a("div",{staticClass:"blogText"},[t._v(" How might we go about building the game Minesweeper? Let's go through the steps (using AngularJS): ")]),a("ol",{staticClass:"blogText"},[a("li",{staticClass:"blogText"},[t._v(" To build our grid (of size n x n), we can use an HTML "),a("span",{staticClass:"codeBit"},[t._v("table")]),t._v(". Using a loop within a loop, we can add data cells (containing buttons) to each row, and then "),a("span",{staticClass:"codeBit"},[t._v("append")]),t._v(" the row to our table. ")]),a("pre",[a("code",{attrs:{layout:"","layout-align":"center center"}},[t._v("     function drawGridMines(n) {\n      var table = angular.element(\n        document.getElementById('mineSweep'));\n      var mineRow = [];\n      var mineRowVals = [];\n      for (var k=0; k < n; k++) {\n        for (var i=0; i < n; i++) {\n          mineRow.push('<td><button class=\n          \"mineButton row' + k + 'col' + i +\n          '\"ng-click=\"cc.checkBoxMine($event)\">\n            </button></td>');\n          mineRowVals.push('0');\n        }\n      var fullRow = '<tr>' + mineRow + '</tr>';\n      table.append($compile(fullRow)($scope));\n      mineRow = [];\n\n      valuesOnGrid.push(mineRowVals);\n      mineRowVals = [];\n  }")])]),a("div",{staticClass:"blogText"},[t._v(" We give each button an "),a("span",{staticClass:"codeBit"},[t._v("id")]),t._v(", e.g. "),a("span",{staticClass:"codeBit"},[t._v("row1col3")]),t._v(", so that it knows its row/column position. Note that we must wrap our element with "),a("span",{staticClass:"codeBit"},[t._v("angular.element()")]),t._v(" in order to "),a("span",{staticClass:"codeBit"},[t._v("append")]),t._v(" to it. Further, we need to "),a("span",{staticClass:"codeBit"},[t._v("$compile")]),t._v(" our HTML before appending it. ")]),a("li",{staticClass:"blogText"},[t._v(" We store the values that live underneath each button (either 'bomb' or a number representing the number of adjacent bombs) in an array of arrays, "),a("span",{staticClass:"codeBit"},[t._v("valuesOnGrid")]),t._v(". To start, let's put a '0' in each cell. ")]),a("li",{staticClass:"blogText"},[t._v(" Next we need to generate our bombs — the trick here is to ensure that we put each bomb in a unique cell. Then we update our "),a("span",{staticClass:"codeBit"},[t._v("valuesOnGrid")]),t._v(" array to reflect the positions of the bombs: ")]),a("pre",[a("code",{attrs:{layout:"","layout-align":"center center"}},[t._v("       for (var j=0; j < mines.length; j++) {\n          var mine = mines[j];\n          valuesOnGrid[mine.row][mine.col] = 'b';\n      }")])]),a("li",{staticClass:"blogText"},[t._v(" We need to get the count of adjacent bombs for each cell. We can write a function, "),a("span",{staticClass:"codeBit"},[t._v("getNeighbors(r, c)")]),t._v(", to find all of a cell's neighbors (taking into account that it may lie on the table's edge). I will spare you my rather clumsy code. ")]),a("li",{staticClass:"blogText"},[t._v(" Then we can feed the array of neighbors into a "),a("span",{staticClass:"codeBit"},[t._v("checkForBombs")]),t._v(" function that updates our "),a("span",{staticClass:"codeBit"},[t._v("valuesOnGrid")]),t._v(" array with numeric values: ")]),a("pre",[a("code",{attrs:{layout:"","layout-align":"center center"}},[t._v("     function checkForBombs(r, c) {\n      var neighbors = getNeighbors(r, c);\n      var v = valuesOnGrid[r][c];\n\n      if (v != 'b') {\n        var intV = parseInt(v);\n        for (var i=0; i < neighbors.length; i++) {\n          var n = neighbors[i];\n          var val = valuesOnGrid[n.row][n.col];\n          if (val == 'b') {\n            intV ++;\n          }\n        }\n        valuesOnGrid[r][c] = String(intV);\n      }\n    }\n\n  valuesOnGrid.forEach(function(arr, index) {\n      var ind = index;\n      arr.forEach(function(v, index) {\n        checkForBombs(ind, index);\n      });\n    });\n  ")])]),a("li",{staticClass:"blogText"},[t._v(" What happens if the player clicks a button? We check whether there is a bomb there; if so, they lose. If not, remove the button to reveal the number. (This is why we must pass "),a("span",{staticClass:"codeBit"},[t._v("$event")]),t._v(" into each button's "),a("span",{staticClass:"codeBit"},[t._v("ng-click")]),t._v(". We can use "),a("span",{staticClass:"codeBit"},[t._v('ev.target.getAttribute("class")')]),t._v(" in the controller to access the clicked button's class, which contains information about its position. To find out what value lives at that position, we use "),a("span",{staticClass:"codeBit"},[t._v("valuesOnGrid[row][col]")]),t._v(". We remove the button with "),a("span",{staticClass:"codeBit"},[t._v("ev.currentTarget.remove()")]),t._v(".) ")]),a("li",{staticClass:"blogText"},[t._v(" The really tricky part is opening up islands — i.e. sometimes, when you click a button, multiple cells will open up. I believe the logic is: ")]),a("ul",[a("li",{staticClass:"blogText"},[t._v("Check the clicked cell's neighbors for 0s.")]),a("li",{staticClass:"blogText"},[t._v(" For each 0 among the neighbors, open up that cell and all of "),a("i",[t._v("its")]),t._v(" neighbors. (Since the value is 0, we are guaranteed to never reveal a bomb.) ")]),a("li",{staticClass:"blogText"},[t._v("If any of the opened neighbors contains a 0, repeat the above.")])]),a("pre",[a("code",{attrs:{layout:"","layout-align":"center center"}},[t._v("       function checkForZeros(r, c) {\n        var neighbors = getNeighbors(r, c, 5);\n        neighbors.forEach(function(n) {\n          var pos = String(n.row) + String(n.col);\n          if (valuesOnGrid[n.row][n.col] === '0'\n            && !newNeighbors.includes(pos)) {\n              newNeighbors.push(pos);\n              checkForZeros(n.row, n.col);\n            }\n          });\n      }")])]),a("div",{staticClass:"blogText"},[t._v(" Notice that we have to store each opened 0-cell in a "),a("span",{staticClass:"codeBit"},[t._v("newNeighbors")]),t._v(" array, and check whether the array already includes a cell before "),a("span",{staticClass:"codeBit"},[t._v("push")]),t._v("ing it. This ensures that our program doesn't enter an infinite loop, finding all of a cell's 0-neighbors that have already been opened. ")]),a("li",{staticClass:"blogText"},[t._v(" Finally, we'll want to add in right-click functionality for flagging spaces suspected to contain bombs. When the user opens up every square that doesn't contain a bomb, they win! ")])]),a("div",{staticClass:"blogText"},[t._v("Here's a prototype of the game. It's not fully operational just yet:")]),a("div",{attrs:{layout:"","layout-align":"center center"}},[a("table",{attrs:{id:"mineSweep"}})])])}],Jt=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return Object(o["b"])(e,t),e=Object(o["a"])([r["a"]],e),e}(r["c"]),Gt=Jt,Ht=Gt,Ut=Object(p["a"])(Ht,Rt,Ft,!1,null,null,null),Vt=Ut.exports,Yt=function(){var t=this,e=t.$createElement;t._self._c;return t._m(0)},Qt=[function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",[a("div",{staticClass:"flex flex-col items-center"},[a("div",[a("h2",{staticClass:"blogTitle"},[t._v("From JavaScript to Python: Basic Syntax")])]),a("div",{staticClass:"blogSubtitle"},[t._v("Dec. 21, 2017")])]),a("div",{staticClass:"blogText"},[t._v(" Python is sometimes touted as one of the easiest programming languages to learn. I think this is especially true when approaching Python from a background in JavaScript. ")]),a("div",{staticClass:"blogText"},[t._v(" The first thing to know is that whereas JavaScript uses parentheses and braces to signify different code blocks, Python relies on white space and colons: ")]),a("div",{attrs:{layout:"row","layout-align":"center center"}},[a("div",{attrs:{layout:"col"}},[a("pre",[a("code",{attrs:{layout:"","layout-align":"top center"}},[t._v('      //JavaScript:\n      function sayHello() {\n        console.log("Hello world!");\n      }\n      sayHello()')])])]),a("div",{attrs:{layout:"col"}},[a("pre",[a("code",{attrs:{layout:"","layout-align":"top center"}},[t._v('      #Python:\n      def sayHello():\n        print "Hello world!"\n      sayHello()')])])])]),a("div",{staticClass:"blogText"},[t._v(" Working with strings is similar in Python: instead of "),a("span",{staticClass:"codeBit"},[t._v("str.length")]),t._v(", you use "),a("span",{staticClass:"codeBit"},[t._v("len(str)")]),t._v("; instead of "),a("span",{staticClass:"codeBit"},[t._v("str.charAt(0)")]),t._v(", you use "),a("span",{staticClass:"codeBit"},[t._v("str[0]")]),t._v(". Python offers a nice feature, "),a("i",[t._v("string substitution")]),t._v(", which lets you put variables inside of strings (note that Python also allows us to dispense with semicolons and declaration keywords such as "),a("span",{staticClass:"codeBit"},[t._v("var")]),t._v(" or "),a("span",{staticClass:"codeBit"},[t._v("let")]),t._v("): ")]),a("div",{attrs:{layout:"row","layout-align":"center center"}},[a("div",{attrs:{layout:"col"}},[a("pre",[a("code",{attrs:{layout:"","layout-align":"top center"}},[t._v("        //JavaScript:\n        var x = 'phoenix';\n        console.log('This bird is a ', x);")])])]),a("div",{attrs:{layout:"col"}},[a("pre",[a("code",{attrs:{layout:"","layout-align":"top center"}},[t._v("        #Python:\n        x = 'phoenix'\n        print 'This bird is a %s' % (x)")])])])]),a("div",{staticClass:"blogText"},[t._v(" Another nice aspect of Python is the strong parallelism between strings, lists (which are Python's version of arrays) and dictionaries (which are Python's version of objects). This parallelism shines through in the way Python treats "),a("span",{staticClass:"codeBit"},[t._v("for")]),t._v(" loops (this syntax might remind AngularJS users of "),a("span",{staticClass:"codeBit"},[t._v("ng-repeat")]),t._v("): ")]),a("div",{attrs:{layout:"row","layout-align":"center center"}},[a("div",{attrs:{layout:"col"}},[a("pre",[a("code",{attrs:{layout:"","layout-align":"top center"}},[t._v("        //JavaScript:\n        var myArray = [1, 'apple'];\n        for (var i=0; i < myArray.length;\n          i++) {\n            console.log(myArray[i]);\n          }")])])]),a("div",{attrs:{layout:"col"}},[a("pre",[a("code",{attrs:{layout:"","layout-align":"top center"}},[t._v("      #Python:\n      myString = 'capybara'\n      myList = [1, 'apple', 7.2]\n      myDictionary = {\n        'shirt_color': 'black',\n        'socks': ['blueSock', 'redSock'],\n        'shoes_count': 2\n      }\n      for c in myString:\n        print c\n      for x in myList:\n        print x\n      for key in myDictionary:\n        print key + ' ' + myDictionary[key]")])])])]),a("div",{staticClass:"blogText"},[t._v(" In order to replicate the JavaScript way of writing "),a("span",{staticClass:"codeBit"},[t._v("for")]),t._v(" loops in Python, we could awkwardly write ")]),a("pre",[a("code",{attrs:{layout:"","layout-align":"center center"}},[t._v("for i in range(len(myList)):\n    print myList[i]")])]),a("div",{staticClass:"blogText"},[t._v(" Alternatively, we could write "),a("span",{staticClass:"codeBit"},[t._v("enumerate(myList)")]),t._v(" if we wanted to attach an index to each item in our list (we could even pass it a second argument to tell it which index to start counting at!). ")]),a("div",{staticClass:"blogText"},[t._v(" Python also makes it easy to spin up tailor-made lists with a feature called "),a("i",[t._v("list comprehension")]),t._v(". To get a list of all multiples of 3 between 20 and 80, we could write ")]),a("pre",[a("code",{attrs:{layout:"","layout-align":"center center"}},[t._v("myArray = [i for i in range(20, 80) if i % 3 == 0]\n  print myArray")])]),a("div",{staticClass:"blogText"},[t._v(" One of my favorite things about Python is its readability. Instead of having to know, for example, that JavaScript arrays have a method called "),a("span",{staticClass:"codeBit"},[t._v(".includes()")]),t._v(" that checks whether an array contains a certain element, we can just write ")]),a("pre",[a("code",{attrs:{layout:"","layout-align":"center center"}},[t._v('     if user_guess not in correct_guesses:\n      print "Guess again!"')])]),a("div",{staticClass:"blogText"},[t._v(" Suppose we wanted to filter an array, purging it of all elements that fail to meet a certain condition. We can pass an anonymous function (written on the fly) to the array's "),a("span",[t._v("filter")]),t._v(" method. Python lets us abbreviate this process with a "),a("i",[t._v("lambda")]),t._v(" operator; similarly, ES6 offers arrow functions. Let's filter out all trees that don't begin with 'c': ")]),a("div",{attrs:{layout:"row","layout-align":"center center"}},[a("div",{attrs:{layout:"col"}},[a("pre",[a("code",{attrs:{layout:"","layout-align":"top center"}},[t._v("      //JavaScript:\n        var trees = ['conifer', 'birch',\n          'cedar'];\n        var c_trees = trees.filter(\n          function(tree, trees) {\n            return tree.charAt(0) == 'c';\n          });\n    //Or, with an arrow function:\n        var c_trees = trees.filter(() =>\n          {return tree.charAt(0) == 'c'});")])])]),a("div",{attrs:{layout:"col"}},[a("pre",[a("code",{attrs:{layout:"","layout-align":"top center"}},[t._v("      #Python:\n      trees = ['conifer', 'birch', 'cedar']\n      c_trees = filter(\n        lambda tree: tree[0] == 'c', trees)")])])])]),a("div",{staticClass:"blogText"},[t._v(" Class inheritance, too, works similarly across our two languages. We can declare a new class with a constructor (or "),a("i",[t._v("initialization")]),t._v(") function, add methods to our class, and then create an instance: ")]),a("div",{attrs:{layout:"row","layout-align":"center center"}},[a("div",{attrs:{layout:"col"}},[a("pre",[a("code",{attrs:{layout:"","layout-align":"top center"}},[t._v('        //JavaScript:\n        class Dog {\n          constructor(breed, color) {\n            this.breed = breed;\n            this.color = color;\n          }\n          bark() {\n            console.log("Woof!");\n          }\n        }\n        var tiny = new Dog("pug", "tan");\n        tiny.bark();')])])]),a("div",{attrs:{layout:"col"}},[a("pre",[a("code",{attrs:{layout:"","layout-align":"top center"}},[t._v('      #Python:\n      class Dog(object):\n        def __init__(self, breed, color):\n          self.breed = breed\n          self.color = color\n        def bark(self):\n          print "Woof!"\n      tiny = Dog("pug", "tan")\n      tiny.bark()')])])])]),a("div",{staticClass:"blogText"},[t._v(" If we want one class (a succlass) to inherit all of the methods and properties associated with another object — say we want to create Pug and Greyhound and Mastiff succlasses — we can write ")]),a("div",{attrs:{layout:"row","layout-align":"center center"}},[a("div",{attrs:{layout:"col"}},[a("pre",[a("code",{attrs:{layout:"","layout-align":"top center"}},[t._v("        //JavaScript:\n        class Pug extends Dog {\n          ...\n        }")])])]),a("div",{attrs:{layout:"col"}},[a("pre",[a("code",{attrs:{layout:"","layout-align":"top center"}},[t._v("        #Python:\n        class Pug(Dog):\n          ...")])])])]),a("div",{staticClass:"blogText"},[t._v(" There is plenty more to explore in Python — especially the plethora of libraries that are available for you to "),a("span",{staticClass:"codeBit"},[t._v("import")]),t._v(" into your project — but hopefully this has been enough to convince you that the transition from JavaScript into Python can be a smooth one. ")])])}],Kt=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return Object(o["b"])(e,t),e=Object(o["a"])([r["a"]],e),e}(r["c"]),Zt=Kt,Xt=Zt,te=Object(p["a"])(Xt,Yt,Qt,!1,null,null,null),ee=te.exports,ae=function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",[t._m(0),a("div",{staticClass:"blogText"},[t._v(" Being something of a math/physics nerd, I was delighted to discover that with just the HTML canvas element, vanilla JavaScript, and a bit of math, one can easily render pleasing visual illustrations of key mathematical relationships. ")]),t._m(1),t._m(2),a("div",{staticClass:"blogText"},[t._v(" This function keeps track of the ball's position. We can call it many times per second, each time clearing the canvas and re-drawing the ball at a slightly different position. ")]),t._m(3),t._m(4),t._m(5),t._m(6),t._m(7),a("div",{staticClass:"blogText"},[t._v(" To draw a parabolic curve onto the canvas requires a bit more thought. Canvas has built-in functions to draw circular and elliptical arcs, but if you want to draw a specific curve, you need to break things down into small intervals (borrowing an idea from calculus) and connect the dots with straight lines. When the intervals are small enough, the concatentation of straight lines will appear curve-like. ")]),t._m(8),t._m(9),a("div",{staticClass:"blogText"},[t._v(" We use canvas's built-in linear transformation function to reflect the first half of the parabola over the y-axis: ")]),t._m(10),a("div",{staticClass:"blogText"},[t._v(" Don't forget to transform again when you're done drawing the second half — otherwise all your future commands will assume your canvas is still flipped over. (You can use the same function, since the transformation is symmetric.) ")]),a("div",{attrs:{layout:"","layout-align":"center center"}},[a("canvas",{attrs:{id:"parabola",width:"400",height:"400"}}),t._v(" "),a("md-slider",{attrs:{"ng-model":"cc.params.p",min:"5",max:"500","ng-change":"cc.parabola2(200,1,1/(cc.params.p*4/100),0,0,1)","aria-label":"parab"}})],1),a("div",{staticClass:"blogText",attrs:{layout:"","layout-align":"center center"}},[t._v(" We can apply the same principle to write a function that draws a circle or an ellipse (as well as any regular polygon!). As we increase the number of sides (represented in this function by the argument x), the shape appears more curve-like. ")]),t._m(11),a("div",{attrs:{layout:"","layout-align":"center center"}},[a("canvas",{attrs:{id:"polygon",width:"400",height:"400"}}),t._v(" "),a("md-slider",{attrs:{"ng-model":"cc.n",min:"2",max:"18","ng-change":"cc.drawPolygon(cc.n)","aria-label":"polygon"}})],1),t._m(12),t._m(13),a("div",{staticClass:"blogText"},[t._v(" Being something of a math/physics nerd, I was delighted to discover that with just the HTML canvas element, vanilla JavaScript, and a bit of math, one can easily render pleasing visual illustrations of key mathematical relationships. ")]),t._m(14),t._m(15),a("div",{staticClass:"blogText"},[t._v(" This function keeps track of the ball's position. We can call it many times per second, each time clearing the canvas and re-drawing the ball at a slightly different position. ")]),t._m(16),t._m(17),t._m(18),t._m(19),t._m(20),a("div",{staticClass:"blogText"},[t._v(" To draw a parabolic curve onto the canvas requires a bit more thought. Canvas has built-in functions to draw circular and elliptical arcs, but if you want to draw a specific curve, you need to break things down into small intervals (borrowing an idea from calculus) and connect the dots with straight lines. When the intervals are small enough, the concatentation of straight lines will appear curve-like. ")]),t._m(21),t._m(22),a("div",{staticClass:"blogText"},[t._v(" We use canvas's built-in linear transformation function to reflect the first half of the parabola over the y-axis: ")]),t._m(23),a("div",{staticClass:"blogText"},[t._v(" Don't forget to transform again when you're done drawing the second half — otherwise all your future commands will assume your canvas is still flipped over. (You can use the same function, since the transformation is symmetric.) ")]),a("div",{attrs:{layout:"","layout-align":"center center"}},[a("canvas",{attrs:{id:"parabola",width:"400",height:"400"}}),t._v(" "),a("md-slider",{attrs:{"ng-model":"cc.params.p",min:"5",max:"500","ng-change":"cc.parabola2(200,1,1/(cc.params.p*4/100),0,0,1)","aria-label":"parab"}})],1),a("div",{staticClass:"blogText",attrs:{layout:"","layout-align":"center center"}},[t._v(" We can apply the same principle to write a function that draws a circle or an ellipse (as well as any regular polygon!). As we increase the number of sides (represented in this function by the argument x), the shape appears more curve-like. ")]),t._m(24),a("div",{attrs:{layout:"","layout-align":"center center"}},[a("canvas",{attrs:{id:"polygon",width:"400",height:"400"}}),t._v(" "),a("md-slider",{attrs:{"ng-model":"cc.n",min:"2",max:"18","ng-change":"cc.drawPolygon(cc.n)","aria-label":"polygon"}})],1),t._m(25)])},ie=[function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"flex flex-col items-center"},[a("h2",{staticClass:"blogTitle"},[t._v("Getting Started with HTML Canvas Animations")]),a("div",{staticClass:"blogSubtitle"},[t._v("Dec. 8, 2017")])])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"blogText"},[t._v(" For instance, one can illustrate a ball following a parabolic path. To describe the shape of a parabola, you just need a quadratic equation: "),a("div",{staticClass:"math",attrs:{layout:"","layout-align":"center center"}},[a("i",[t._v("f(x) = ax"),a("sup",[t._v("2")]),t._v(" + bx + c")])]),t._v(" As a bonus, since one natural way of writing the code ensures that the x-value changes linearly (at a constant rate), the ball will behave as if it is under the influence of gravity! The variable "),a("span",{staticClass:"codeBit"},[t._v("ctx")]),t._v(" is what allows us to interact with the canvas: ")])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("pre",[a("code",{attrs:{layout:"","layout-align":"center center"}},[t._v("    var canvas = document.getElementById('ballCanvas');\n      var ctx = canvas.getContext(\"2d\");\n      vm.x = 0;\n      function ball() {\n          ctx.clearRect(0,0,400,400);\n          var xStandard = (vm.x - 200)/100;\n          var yPix = Math.pow(xStandard, 2)*100;\n          ctx.translate(200, 0);\n          ctx.beginPath();\n          ctx.arc(xStandard*100, yPix, 5, 0, 2*Math.PI);\n          ctx.stroke();\n          ctx.fillStyle = 'purple';\n          ctx.fill();\n          ctx.translate(-200, 0);\n          vm.x += 5;\n        }")])])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"blogText"},[t._v(" Canvas's coordinate system starts at the upper lefthand corner; the value of "),a("i",[t._v("y")]),t._v(" increases as you move further down the screen, and "),a("i",[t._v("x")]),t._v("'s value increases as you move right. ")])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"blogText"},[t._v(" We translate to a new origin to simplify our calculation, moving to the middle of the top of our 400x400 canvas, to (200, 0). "),a("i",[t._v("(Don't forget to translate back out before re-drawing the ball!)")]),t._v(". Then we divide by 100 to standardize our units before squaring the value of the ball's x-coordinate, which gives us the ball's y-coordinate. ")])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"blogText"},[t._v(" Now that we know the ball's position, it's straightforward to draw it: we begin a new path, call canvas's "),a("span",{staticClass:"codeBit"},[t._v("arc()")]),t._v(" method, draw the ball's outline with "),a("span",{staticClass:"codeBit"},[t._v("stroke()")]),t._v(", and color it in with "),a("span",{staticClass:"codeBit"},[t._v("fill()")]),t._v(". Finally, we ensure our function is called every 50 milliseconds: ")])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("pre",[a("code",{attrs:{layout:"","layout-align":"center center"}},[t._v("vm.throwBall = function() {\n          setInterval(ball, 50);\n        };")])])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{attrs:{layout:"","layout-align":"center center"}},[a("canvas",{attrs:{id:"parabolaBall",width:"400",height:"400"}}),t._v(" "),a("button",{attrs:{"ng-click":"cc.throwBall()"}},[t._v("Throw")])])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("pre",[a("code",{attrs:{layout:"","layout-align":"center center"}},[t._v("function parabola(x, L, a, dir) {\n          for (var i = 0; i < x; i++) {\n            ctx.moveTo(i*L + dir*200, a*Math.pow(i*L/100, 2)*100 + i*L + 100);\n            ctx.lineTo((i+1)*L + dir*200, a*Math.pow((i+1)*L/100, 2)*100 + (i+1)*L + 100);\n            ctx.stroke();\n          }\n        }")])])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"blogText"},[t._v(" In this function, "),a("i",[t._v("x")]),t._v(" controls the number of iterations, and "),a("i",[t._v("L")]),t._v(" controls the length of the line segment that is drawn during each iteration. We're hard-coding in the values of "),a("i",[t._v("b")]),t._v(" and "),a("i",[t._v("c")]),t._v(". The idea is to begin the line (with "),a("span",{staticClass:"codeBit"},[t._v("moveTo()")]),t._v(") at one point on the parabola, and end it at a nearby point on the parabola with "),a("span",{staticClass:"codeBit"},[t._v("lineTo()")]),t._v(". Remember to draw the line with "),a("span",{staticClass:"codeBit"},[t._v("stroke()")]),t._v("! ")])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("pre",[a("code",{attrs:{layout:"","layout-align":"center center"}},[t._v("ctx.transform(-1, 0, 0, 1, 0, 0);")])])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("pre",[a("code",{attrs:{layout:"","layout-align":"center center"}},[t._v("function circle(a, b, x, r) {\n          ctx.beginPath();\n          for (var i = 0; i < x; i++) {\n            ctx.moveTo(r*a*Math.cos(i*2*Math.PI/x), r*b*Math.sin(i*2*Math.PI/x));\n            ctx.lineTo(r*a*Math.cos((i+1)*2*Math.PI/x), r*b*Math.sin((i+1)*2*Math.PI/x));\n            ctx.stroke();\n          }\n        }")])])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"blogText"},[t._v(" One key thing to note here is the "),a("span",{staticClass:"codeBit"},[t._v("beginPath")]),t._v(" function. Often you will want to clear your canvas (with a "),a("span",{staticClass:"codeBit"},[t._v("clearRect()")]),t._v(" method call), and in order to draw on your freshly cleared canvas you will need to begin a new path. ")])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{attrs:{layout:"column","layout-align":"center center",id:"post1"}},[a("h2",{staticClass:"blogTitle"},[t._v("Getting Started with HTML Canvas Animations")]),a("div",{staticClass:"blogSubtitle"},[t._v("Dec. 8, 2017")])])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"blogText"},[t._v(" For instance, one can illustrate a ball following a parabolic path. To describe the shape of a parabola, you just need a quadratic equation: "),a("div",{staticClass:"math",attrs:{layout:"","layout-align":"center center"}},[a("i",[t._v("f(x) = ax"),a("sup",[t._v("2")]),t._v(" + bx + c")])]),t._v(" As a bonus, since one natural way of writing the code ensures that the x-value changes linearly (at a constant rate), the ball will behave as if it is under the influence of gravity! The variable "),a("span",{staticClass:"codeBit"},[t._v("ctx")]),t._v(" is what allows us to interact with the canvas: ")])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("pre",[a("code",{attrs:{layout:"","layout-align":"center center"}},[t._v("    var canvas = document.getElementById('ballCanvas');\n      var ctx = canvas.getContext(\"2d\");\n      vm.x = 0;\n      function ball() {\n          ctx.clearRect(0,0,400,400);\n          var xStandard = (vm.x - 200)/100;\n          var yPix = Math.pow(xStandard, 2)*100;\n          ctx.translate(200, 0);\n          ctx.beginPath();\n          ctx.arc(xStandard*100, yPix, 5, 0, 2*Math.PI);\n          ctx.stroke();\n          ctx.fillStyle = 'purple';\n          ctx.fill();\n          ctx.translate(-200, 0);\n          vm.x += 5;\n        }")])])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"blogText"},[t._v(" Canvas's coordinate system starts at the upper lefthand corner; the value of "),a("i",[t._v("y")]),t._v(" increases as you move further down the screen, and "),a("i",[t._v("x")]),t._v("'s value increases as you move right. ")])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"blogText"},[t._v(" We translate to a new origin to simplify our calculation, moving to the middle of the top of our 400x400 canvas, to (200, 0). "),a("i",[t._v("(Don't forget to translate back out before re-drawing the ball!)")]),t._v(". Then we divide by 100 to standardize our units before squaring the value of the ball's x-coordinate, which gives us the ball's y-coordinate. ")])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"blogText"},[t._v(" Now that we know the ball's position, it's straightforward to draw it: we begin a new path, call canvas's "),a("span",{staticClass:"codeBit"},[t._v("arc()")]),t._v(" method, draw the ball's outline with "),a("span",{staticClass:"codeBit"},[t._v("stroke()")]),t._v(", and color it in with "),a("span",{staticClass:"codeBit"},[t._v("fill()")]),t._v(". Finally, we ensure our function is called every 50 milliseconds: ")])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("pre",[a("code",{attrs:{layout:"","layout-align":"center center"}},[t._v("vm.throwBall = function() {\n          setInterval(ball, 50);\n        };")])])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{attrs:{layout:"","layout-align":"center center"}},[a("canvas",{attrs:{id:"parabolaBall",width:"400",height:"400"}}),t._v(" "),a("button",{attrs:{"ng-click":"cc.throwBall()"}},[t._v("Throw")])])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("pre",[a("code",{attrs:{layout:"","layout-align":"center center"}},[t._v("function parabola(x, L, a, dir) {\n          for (var i = 0; i < x; i++) {\n            ctx.moveTo(i*L + dir*200, a*Math.pow(i*L/100, 2)*100 + i*L + 100);\n            ctx.lineTo((i+1)*L + dir*200, a*Math.pow((i+1)*L/100, 2)*100 + (i+1)*L + 100);\n            ctx.stroke();\n          }\n        }")])])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"blogText"},[t._v(" In this function, "),a("i",[t._v("x")]),t._v(" controls the number of iterations, and "),a("i",[t._v("L")]),t._v(" controls the length of the line segment that is drawn during each iteration. We're hard-coding in the values of "),a("i",[t._v("b")]),t._v(" and "),a("i",[t._v("c")]),t._v(". The idea is to begin the line (with "),a("span",{staticClass:"codeBit"},[t._v("moveTo()")]),t._v(") at one point on the parabola, and end it at a nearby point on the parabola with "),a("span",{staticClass:"codeBit"},[t._v("lineTo()")]),t._v(". Remember to draw the line with "),a("span",{staticClass:"codeBit"},[t._v("stroke()")]),t._v("! ")])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("pre",[a("code",{attrs:{layout:"","layout-align":"center center"}},[t._v("ctx.transform(-1, 0, 0, 1, 0, 0);")])])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("pre",[a("code",{attrs:{layout:"","layout-align":"center center"}},[t._v("function circle(a, b, x, r) {\n          ctx.beginPath();\n          for (var i = 0; i < x; i++) {\n            ctx.moveTo(r*a*Math.cos(i*2*Math.PI/x), r*b*Math.sin(i*2*Math.PI/x));\n            ctx.lineTo(r*a*Math.cos((i+1)*2*Math.PI/x), r*b*Math.sin((i+1)*2*Math.PI/x));\n            ctx.stroke();\n          }\n        }")])])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"blogText"},[t._v(" One key thing to note here is the "),a("span",{staticClass:"codeBit"},[t._v("beginPath")]),t._v(" function. Often you will want to clear your canvas (with a "),a("span",{staticClass:"codeBit"},[t._v("clearRect()")]),t._v(" method call), and in order to draw on your freshly cleared canvas you will need to begin a new path. ")])}],ne=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return Object(o["b"])(e,t),e=Object(o["a"])([r["a"]],e),e}(r["c"]),se=ne,oe=se,re=Object(p["a"])(oe,ae,ie,!1,null,null,null),le=re.exports,ce=function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",[t._m(0),a("div",{staticClass:"blogText"},[t._v(" It turns out that the cardioid (heart-shape) that appears at the center of the Mandelbrot set also turns up throughout mathematics. ")]),t._m(1),t._m(2),t._m(3),t._m(4),a("br"),a("div",{staticClass:"flex flex-col items-center"},[a("div",{staticClass:"mb-6"},[a("button",{staticClass:"bg-blue-400 p-2 text-white rounded mr-4",on:{click:t.start}},[t._v("Start")]),a("button",{staticClass:"bg-blue-400 p-2 text-white rounded",on:{click:t.stop}},[t._v("Pause")])]),a("canvas",{attrs:{id:"cardioid",width:"600",height:"600"}})]),t._m(5)])},he=[function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"flex flex-col items-center"},[a("div",[a("h2",{staticClass:"blogTitle"},[t._v("Cardioid Animation")])]),a("div",{staticClass:"blogSubtitle"},[t._v(" Jan. 27, 2018 ")])])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"blogText"},[t._v(" It so happens that the cardioid appears in the Mandelbrot set because of the "),a("i",[t._v("2")]),t._v(" that shows up in the iterated function: "),a("span",{staticClass:"codeBit"},[t._v("f(z) = z"),a("sup",[t._v("2")]),t._v(" + c")]),t._v(". If we were to crank it up to "),a("span",{staticClass:"codeBit"},[t._v("f(z) = z"),a("sup",[t._v("3")]),t._v(" + c")]),t._v(", we would see a nephroid — a kind of double-petaled cardioid. As we increase the power, "),a("i",[t._v("n")]),t._v(", to which "),a("i",[t._v("z")]),t._v(" is taken, we increase the number of petals (to "),a("i",[t._v("n - 1")]),t._v("). ")])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"blogText"},[t._v(" A rather fantastic way of illustrating this fact is by considering the multiplication table for "),a("i",[t._v("n")]),t._v(". We wrap the table around in a circle, and apply the "),a("span",{staticClass:"codeBit"},[t._v("modulus")]),t._v(" function to cycle. ")])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"blogText"},[t._v(" Our 'circle' is composed of "),a("i",[t._v("x")]),t._v(" dots, so we want to use "),a("span",{staticClass:"codeBit"},[t._v("% x")]),t._v(" to keep cycling. We get a nice picture if we choose "),a("span",{staticClass:"codeBit"},[t._v("x = 200")]),t._v(". ")])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"blogText"},[t._v(" Suppose "),a("i",[t._v("n")]),t._v(" is 3, so that we're considering the 3-times table. We walk through our 'circle', at each point multiplying by three and drawing a line to that new dot. So if we're standing at dot number 6, we'll draw a line to dot number 18 (modulo whatever our "),a("i",[t._v("x")]),t._v(" is). Stepping forward from "),a("span",{staticClass:"codeBit"},[t._v("n = 1")]),t._v(" looks like this: ")])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"blogText"},[t._v(" You can find my full source code "),a("a",{attrs:{href:"https://github.com/zackstout/Cardioid-animation"}},[t._v("here")]),t._v(" Thanks to "),a("a",{attrs:{href:"http://www.youtube.com/watch?v=qhbuKbxJsk8"}},[t._v("Mathologer")]),t._v(" for providing the inspiration for this animation. ")])}],de=function(t){function e(){var e=null!==t&&t.apply(this,arguments)||this;return e.cardioidPosition=1,e.running=!1,e.interval=null,e}return Object(o["b"])(e,t),e.prototype.start=function(){this.running=!0},e.prototype.stop=function(){this.running=!1},e.prototype.mounted=function(){var t=this;console.log("mount"),this.interval=setInterval((function(){t.circleCard(1,1,200,300,t.cardioidPosition),t.running&&(t.cardioidPosition+=.01)}),10)},e.prototype.beforeDestroy=function(){clearInterval(this.interval)},e.prototype.circleCard=function(t,e,a,i,n){var s=document.getElementById("cardioid").getContext("2d");s.clearRect(0,0,600,600),s.strokeStyle="blue",s.translate(300,300);for(var o=0;o<a;o++){var r={xCoord:i*t*Math.cos(2*o*Math.PI/a),yCoord:i*e*Math.sin(2*o*Math.PI/a)},l=n*o%a,c={xCoord:i*t*Math.cos(2*l*Math.PI/a),yCoord:i*e*Math.sin(2*l*Math.PI/a)};s.beginPath(),s.moveTo(r.xCoord,r.yCoord),s.lineTo(c.xCoord,c.yCoord),s.stroke()}s.translate(-300,-300)},e=Object(o["a"])([r["a"]],e),e}(r["c"]),ue=de,ve=ue,pe=Object(p["a"])(ve,ce,he,!1,null,null,null),fe=pe.exports,ge=function(){var t=this,e=t.$createElement;t._self._c;return t._m(0)},me=[function(){var t=this,e=t.$createElement,i=t._self._c||e;return i("div",[i("div",{staticClass:"flex flex-col items-center"},[i("div",[i("h2",{staticClass:"blogTitle"},[t._v("The Mandelbrot Set")])]),i("div",{staticClass:"blogSubtitle"},[t._v(" Jan. 20, 2018 ")])]),i("div",{staticClass:"blogText"},[t._v(" Lately I've been growing more and more fascinated by complicated systems or patterns that emerge out of very simple rules. Conway's "),i("a",{attrs:{href:"https://github.com/zackstout/Game-Of-Life"}},[t._v("Game of Life")]),t._v(" and the Sierpinski triangle are a few examples. ")]),i("div",{staticClass:"blogText"},[t._v(" Another well-known example of astounding complexity arising out of sparse rules is the Mandelbrot set. The set divides the plane into two parts: points that are in the set, and points that aren't. ")]),i("div",{staticClass:"blogText"},[t._v(" In order to understand how we decide whether or not a point belongs to the Mandelbrot set, we need to know a bit about complex numbers. A complex number, e.g. "),i("span",{staticClass:"mathBit"},[t._v("z = a + b * i")]),t._v(", contains a "),i("i",[t._v("real")]),t._v(" component ("),i("i",[t._v("a")]),t._v(") and an "),i("i",[t._v("imaginary")]),t._v(" component ("),i("i",[t._v("b * i")]),t._v("). Since we need two real numbers ("),i("i",[t._v("a")]),t._v(" and "),i("i",[t._v("b")]),t._v(") to represent a complex number, it's helpful to think of complex numbers as living on a two-dimensional plane rather than on a line. ")]),i("div",{staticClass:"blogText"},[t._v(" In order to determine whether a particular complex number, "),i("i",[t._v("c")]),t._v(", belongs to the Mandelbrot set, we use the following function: "),i("span",{staticClass:"mathBit"},[t._v("f(z) = z"),i("sup",[t._v("2")]),t._v(" + c")]),t._v(". Starting at 0, we have "),i("span",{staticClass:"mathBit"},[t._v("f(0) = 0"),i("sup",[t._v("2")]),t._v(" + c = c")]),t._v(". Then, we iterate our function, meaning we feed each output back into the function to generate the next output. The first few steps are: ")]),i("div",{staticClass:"math flex flex-col items-center"},[i("pre",[t._v("     f(0) = 0"),i("sup",[t._v("2")]),t._v(" + c\n     f(c) = c"),i("sup",[t._v("2")]),t._v(" + c\n     f(c"),i("sup",[t._v("2")]),t._v(" + c) = (c"),i("sup",[t._v("2")]),t._v(" + c)"),i("sup",[t._v("2")]),t._v(" + c\n     . . .")])]),i("div",{staticClass:"blogText"},[t._v(" Each time we iterate the function, we are moving from one point on the complex plane (our input) to a new point (our output). There are two options for our iteration: either these points will remain bounded near zero, or they will spiral off toward infinity. If they remain bounded, then our original number "),i("i",[t._v("c")]),t._v(" belongs to the Mandelbrot set. ")]),i("div",{staticClass:"blogText"},[t._v(" In order to encode this behavior, it will help to do a bit of algebra. Using the fact that c = a + bi, we can rewrite our function's rule in terms of the real and imaginary components of "),i("i",[t._v("c")]),t._v(": ")]),i("div",{staticClass:"math flex flex-col items-center"},[i("pre",[t._v("f(a + bi) = (a + bi)"),i("sup",[t._v("2")]),t._v(" + (a + bi)\n          = a"),i("sup",[t._v("2")]),t._v(" + 2abi - b"),i("sup",[t._v("2")]),t._v(" + a + bi\n          = (a"),i("sup",[t._v("2")]),t._v(" - b"),i("sup",[t._v("2")]),t._v(" + a) + (2ab + b)i")])]),i("div",{staticClass:"blogText"},[t._v(" The amazing thing is that we now have all we need to draw the set onto our screen. We walk through our canvas, pixel by pixel, checking each point for membership in the set. To determine that a point "),i("i",[t._v("doesn't")]),t._v(" belong to the set, we check whether its iteration ever strays too far (say, 5 units) from the origin. If it does, it won't come back; it will wander to infinity. ")]),i("div",{staticClass:"blogText"},[t._v(" For a wonderful visual effect, we can choose what color to use for that pixel based on how long it takes our algorithm to determine whether the point belongs to the Mandelbrot set. Unsurprisingly, the brightest points — the ones for which it takes longest to determine membership — lie close to the set's border. ")]),i("br"),i("br"),i("div",{staticClass:"flex flex-col items-center"},[i("img",{attrs:{src:a("083b"),alt:""}})]),i("br"),i("br"),i("div",{staticClass:"blogText"},[t._v(" If we zoom in on a piece of our set, we can see that it repeats its structure all the way down: ")]),i("br"),i("br"),i("div",{staticClass:"flex flex-col items-center"},[i("img",{attrs:{src:a("6bc0"),alt:""}})]),i("br"),i("br"),i("div",{staticClass:"blogText"},[t._v(" By playing around with the numbers, one can find some intriguing patterns: ")]),i("br"),i("br"),i("div",{staticClass:"flex flex-col items-center"},[i("img",{attrs:{src:a("d056"),alt:""}})]),i("br"),i("br"),i("div",{staticClass:"blogText"},[t._v(" You can find my full source code "),i("a",{attrs:{href:"https://github.com/zackstout/Animations/blob/master/scripts/mandelbrot.js"}},[t._v("here")]),t._v(". ")])])}],be=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return Object(o["b"])(e,t),e=Object(o["a"])([r["a"]],e),e}(r["c"]),_e=be,ye=_e,we=(a("32d9"),Object(p["a"])(ye,ge,me,!1,null,"ac064d00",null)),xe=we.exports,Ce=function(){var t=this,e=t.$createElement;t._self._c;return t._m(0)},ke=[function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",[a("div",{staticClass:"flex flex-col items-center"},[a("div",[a("h2",{staticClass:"blogTitle"},[t._v("Drawing the Sierpinski Triangle")])]),a("div",{staticClass:"blogSubtitle"},[t._v(" Jan. 12, 2018 ")])]),a("div",{staticClass:"blogText"},[t._v(" The other day my friend "),a("a",{attrs:{href:"https://github.com/bozeman42"}},[t._v("Aaron")]),t._v(" revealed to me a truly magnificent fact. By following an outrageously simple algorithm, one can generate the fractal known as the "),a("a",{attrs:{href:"https://en.wikipedia.org/wiki/Sierpinski_triangle"}},[a("i",[t._v("Sierpinski triangle")])]),t._v(". ")]),a("div",{staticClass:"blogText"},[t._v(" This is seriously incredible. I've noodled with the idea of drawing the triangles recursively, but that proved harder than I anticipated. It is truly amazing that such a seemingly-arbitrary process could generate such "),a("i",[t._v("order")]),t._v(". The algorithm can generate a variety of fractals, each possessing the wonderful property that each of its parts is similar to — really, is the "),a("i",[t._v("same")]),t._v(" as — the whole. ")]),a("div",{staticClass:"blogText"},[t._v(" The algorithm is as follows: draw your vertices. Pick a point at random. Pick a vertex at random, and color in (with a tiny pixel) the midpoint between your point and your vertex. Then, using the colored-in point as a new starting point, pick another random vertex and repeat. ")]),a("div",{staticClass:"blogText"},[t._v(" Marvelously, after many iterations, this process will generate our fractal: ")]),a("div",{attrs:{layout:"","layout-align":"center center"}},[a("canvas",{attrs:{id:"sierptriangle",width:"500",height:"500"}}),a("button",{attrs:{"ng-click":"mc.startSierp()"}},[t._v("Start!")]),a("button",{attrs:{"ng-click":"mc.stopSierp()"}},[t._v("Stop!")])]),a("div",{staticClass:"blogText"},[t._v(" Seeing this triangle materialize out of thin air makes me think of that line, "),a("i",[t._v("Euclid alone has looked on beauty bare.")]),t._v(" It's magic. ")]),a("div",{staticClass:"blogText"},[t._v(" One interesting fact is that our fractal lives somewhere between 1- and 2-dimensional space. How are we to understand this? Well, what does it mean for a shape to be "),a("i",[t._v("n")]),t._v("-dimensional? One way of thinking about it is the following. ")]),a("div",{staticClass:"blogText"},[t._v(" To say that a shape is 2-dimensional is to say that when you scale its sides by a factor of "),a("i",[t._v("n")]),t._v(" (e.g. 3), its area grows by a factor of "),a("i",[t._v("n"),a("sup",[t._v("2")])]),t._v(" (e.g. 9). To say that a shape is 3-dimensional is to say that when you scale its sides by a factor of "),a("i",[t._v("n")]),t._v(" (e.g. 5), its volume grows by a factor of "),a("i",[t._v("n"),a("sup",[t._v("3")])]),t._v(" (e.g. 125). ")]),a("div",{staticClass:"blogText"},[t._v(" What happens when we double the length of a side on our Sierpinski triangle? Notice that the whole triangle has sides with double the length of each first-level triangle's side. So, because there are three first-level triangles, we have a "),a("i",[t._v("threefold")]),t._v(" increase in size when we double the side-length. If the fractal were 2-dimensional, we would expect a fourfold increase, and if it were 1-dimensional, we would expect a twofold increase. ")]),a("div",{staticClass:"blogText"},[t._v(" (If you're interested, the precise value of the triangle's dimension is "),a("i",[t._v("log")]),t._v("(3)/"),a("i",[t._v("log")]),t._v("(2) = 1.58. We divide the log of the scaled-size by the log of the scaled-length to obtain the dimension. In the 2-dimensional case, for example, "),a("i",[t._v("log")]),t._v("(4)/"),a("i",[t._v("log")]),t._v("(2) = 2.) ")]),a("div",{staticClass:"blogText"},[t._v(" Here's another fractal you can generate in the same way: ")]),a("div",{attrs:{layout:"","layout-align":"center center"}},[a("img",{attrs:{width:"600",height:"auto",src:"styles/fractalquad.png",alt:""}})])])}],Te=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return Object(o["b"])(e,t),e=Object(o["a"])([r["a"]],e),e}(r["c"]),Se=Te,je=Se,Be=Object(p["a"])(je,Ce,ke,!1,null,null,null),Ie=Be.exports,Pe=function(){var t=this,e=t.$createElement;t._self._c;return t._m(0)},Oe=[function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",[a("div",{staticClass:"flex flex-col items-center"},[a("div",[a("h2",{staticClass:"blogTitle"},[t._v("Binary Counting and the Towers of Hanoi")])]),a("div",{staticClass:"blogSubtitle"},[t._v(" Jan. 1, 2018 ")])]),a("div",{staticClass:"blogText"},[t._v(" A marvelous fact about the Towers of Hanoi puzzle is that you can solve it by counting in binary. ")]),a("div",{staticClass:"blogText"},[t._v(" The puzzle, as exhibited in a recent iteration of the "),a("i",[t._v("Planet of the Apes")]),t._v(" franchise, is to move a tower of discs from one position to another without ever placing a larger disc atop a smaller one. ")]),a("div",{staticClass:"blogText"},[t._v(" Counting in binary means that we use 2 as a base, rather than 10. So 14 is represented as 1110 in binary, because "),a("div",{attrs:{id:"margAbove",layout:"row","layout-align":"center center"}},[t._v(" 8 + 4 + 2 + 0 = 14 ")]),a("div",{attrs:{layout:"row","layout-align":"center center"}},[a("span",[t._v("2"),a("sup",[t._v("3")]),t._v(" 2"),a("sup",[t._v("2")]),t._v(" 2"),a("sup",[t._v("1")]),t._v(" 2"),a("sup",[t._v("0")])])])]),a("div",{staticClass:"blogText"},[t._v(" As we count up in binary (1, 10, 11, 100, ...), we can imagine each digit (e.g. the 2's place or the 8's place) representing a disc. The 1's place represents the smallest disc. ")]),a("div",{staticClass:"blogText"},[t._v(" The algorithm we want to follow is this: each time we increment our count, a certain digit changes from 0 to 1. Move the disc corresponding to that digit one peg to the right. If you cannot put it there, move it twice. If you are at the rightmost space, wrap around to the beginning. ")]),a("div",{attrs:{layout:"row","layout-align":"center center",id:"binNums"}},[a("span",[a("span",{attrs:{id:"binNumHolder"}}),a("span",{attrs:{id:"binNumHolder2"}}),a("span",{attrs:{id:"binNumHolder3"}})])]),a("div",{attrs:{layout:"","layout-align":"center center"}},[a("canvas",{attrs:{id:"binaryCount",width:"600",height:"300"}})]),a("div",{attrs:{layout:"row","layout-align":"center center"}},[a("div",{attrs:{flex:"10"}},[a("button",{attrs:{"ng-click":"mc.goBack()"}},[t._v("back")])]),a("div",{attrs:{flex:"10"}},[a("button",{attrs:{"ng-click":"mc.goForward()"}},[t._v("forward")])])]),a("div",{staticClass:"blogText"},[t._v(" When moving forward, the red digit represents the disc just moved. When moving backward, it represents the disc about to be moved. ")]),a("div",{staticClass:"blogText"},[t._v(" Astonishly, no matter how many discs we add, this algorithm will generate the fastest path (least number of moves) from first tower to second! It always takes 2"),a("sup",[t._v("n")]),t._v(" - 1 steps, where n is the number of discs. ")]),a("div",{staticClass:"blogText"},[t._v(" ("),a("b",[t._v("Note")]),t._v(": This post is heavily inspired by 3Blue1Brown's "),a("a",{attrs:{href:"https://www.youtube.com/watch?v=2SUvWfNJSsM"}},[t._v("video")]),t._v(".) ")])])}],Me=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return Object(o["b"])(e,t),e=Object(o["a"])([r["a"]],e),e}(r["c"]),Ee=Me,$e=Ee,Ae=Object(p["a"])($e,Pe,Oe,!1,null,null,null),ze=Ae.exports,We=function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",[t._m(0),t._m(1),a("div",{staticClass:"blogText"},[t._v(" This definition might seem strange. For instance, according to it, the set of all integers and the set of all even integers are of the same size, even though in a way it seems as though there are exactly half as many even integers as there are integers. ")]),t._m(2),t._m(3),a("div",{staticClass:"blogText"},[t._v(" One rather breathtaking consequence of this definition is that the interval from 0 to 1 contains exactly as many real numbers as the interval from 0 to positive infinity! We know this because we can produce a bijective correspondence between points in the two intervals. ")]),a("div",{staticClass:"blogText"},[t._v(" We can illustrate this fact by drawing a quarter-circle, and using each point that lies upon it to connect the interval [0, 1] to the interval [0, ∞). ")]),a("div",{attrs:{layout:"","layout-align":"center center"}},[a("canvas",{attrs:{id:"infinity",height:"500",width:"500"}}),t._v(" "),a("md-slider",{attrs:{"ng-model":"mc.inf","ng-change":"mc.infinitize(mc.inf)",min:"1",max:"200","aria-label":"infin"}})],1)])},De=[function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"flex flex-col items-center"},[a("div",[a("h2",{staticClass:"blogTitle"},[t._v("Sizes of Infinite Sets")])]),a("div",{staticClass:"blogSubtitle"},[t._v(" Dec. 23, 2017 ")])])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"blogText"},[t._v(" How might we go about comparing the sizes of different infinite sets? Mathematicians have found it natural to say that two infinite sets have the same size (or "),a("i",[t._v("cardinality")]),t._v(") just in case their members can be put into a bijective relationship: a one-to-one correspondence from set A to set B that hits all the members of B. ("),a("i",[t._v("One-to-one")]),t._v(" means that any element in B can be mapped to by at most one element of A. The latter condition guarantees that every element in B will be mapped to (or 'hit') by some element of A.) ")])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"blogText"},[t._v(" What about sets that our definition judges to have different sizes? Consider the sets R = {all real numbers between 0 and 1} and Q = {all rational numbers between 0 and 1}. (A "),a("i",[t._v("rational")]),t._v(" number is one that can be expressed as a ratio of integers.) Cantor developed a wonderful proof that the two sets cannot be put into a bijective relation; that is, they are not of the same size. The set R has far more members than the set Q, even though both have an infinite number of members. ")])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"blogText"},[t._v(" ("),a("b",[t._v("Note")]),t._v(": Really, what "),a("a",{attrs:{href:"https://en.wikipedia.org/wiki/Cantor%27s_diagonal_argument"}},[t._v("Cantor's proof")]),t._v(" shows is that the set of real numbers, R, cannot be put into a bijective relation with the set of natural numbers (1, 2, 3, ...). The rational numbers, Q, "),a("i",[t._v("can")]),t._v(" be put into a bijective relation with the natural numbers. Since bijectivity is transitive, it follows from Cantor's proof that there is no bijection between Q and R.) ")])}],Ne=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return Object(o["b"])(e,t),e=Object(o["a"])([r["a"]],e),e}(r["c"]),Le=Ne,qe=Le,Re=Object(p["a"])(qe,We,De,!1,null,null,null),Fe=Re.exports,Je=function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",[t._m(0),a("div",{staticClass:"blogText"},[t._v(" Now that we're familiar with the basic tools of the canvas, we can illustrate some cool facts about conic sections. For instance, we can spin up a nice visualization of the parabola's defining property. Every parabola has a focus and a directrix, and obeys the rule that every point on the parabola is equidistant from the parabola's focus and its directrix (pictured as a dotted line). ")]),a("div",{attrs:{layout:"","layout-align":"center center"}},[a("canvas",{attrs:{id:"ball",height:"800",width:"800"}}),t._v(" "),a("md-slider",{attrs:{"ng-model":"mc.x","ng-change":"mc.drawBall(mc.x)",min:"250",max:"750","aria-label":"parabDefn"}})],1),a("div",{staticClass:"blogText"},[t._v(" Similarly, we can dynamically illustrate the defining property of an ellipse: each point on an elliptical path obeys the rule that the sum of its distances from the foci is constant. ")]),t._m(1),a("div",{staticClass:"blogText"},[t._v(" If we also draw in the ellipse's tangent at each point, we have an illustration of the fact that an ellipse's focal lines (lines from each focus to a point on the ellipse) make equal angles with the ellipse's tangent. ")]),a("div",{attrs:{layout:"row"}},[t._m(2),a("div",{attrs:{layout:"column",flex:"30"}},[a("br"),a("br"),a("div",[t._v(" Horizontal Stretch:"),a("md-slider",{attrs:{min:"25",max:"200","ng-model":"mc.a","ng-change":"mc.drawEllipse(mc.a/100, mc.b/100, mc.theta)","aria-label":"ellipseA"}})],1),a("div",[t._v(" Vertical Stretch: "),a("md-slider",{attrs:{min:"25",max:"200","ng-model":"mc.b","ng-change":"mc.drawEllipse(mc.a/100, mc.b/100, mc.theta)","aria-label":"ellipseB"}})],1),a("div",[t._v(" Ball's Position: "),a("md-slider",{attrs:{min:"0",max:"628","ng-model":"mc.theta","ng-change":"mc.drawEllipse(mc.a/100, mc.b/100, mc.theta)","aria-label":"ellipseTheta"}})],1),t._m(3)])]),t._m(4),a("div",{staticClass:"blogText"},[t._v(" Similarly, balls shot out of a parabola's focus will bounce off its wall and shoot straight down, in a path perpendicular to the directrix. Said another way, all light rays passing into a parabolic shape will reflect off the wall and pass through its focus. ")]),a("div",{attrs:{layout:"","layout-align":"center center"}},[a("canvas",{attrs:{id:"parabReflection",width:"800",height:"800"}}),t._v(" "),a("md-slider",{attrs:{min:"250",max:"750","ng-model":"mc.x4","ng-change":"mc.drawBall4(mc.x4)","aria-label":"parabReflection"}})],1),a("div",{staticClass:"blogText"},[t._v(" Finally, we can illustrate the fact that a parabola's orthogonal tangents intersect on the directrix. Moreover, the line connecting two points on the parabola that have orthogonal tangents will always contain the focus! So there are an infinite number of right triangles living between a parabola and its directrix. ")]),a("div",{attrs:{layout:"","layout-align":"center center"}},[a("canvas",{attrs:{id:"parabOrth",width:"800",height:"800"}}),t._v(" "),a("md-slider",{attrs:{min:"250",max:"493","ng-model":"mc.x3","ng-change":"mc.drawBall3(mc.x3)","aria-label":"parabolaOrth"}})],1),t._m(5),a("div",{staticClass:"blogText"},[t._v(" Now that we're familiar with the basic tools of the canvas, we can illustrate some cool facts about conic sections. For instance, we can spin up a nice visualization of the parabola's defining property. Every parabola has a focus and a directrix, and obeys the rule that every point on the parabola is equidistant from the parabola's focus and its directrix (pictured as a dotted line). ")]),a("div",{attrs:{layout:"","layout-align":"center center"}},[a("canvas",{attrs:{id:"ball",height:"800",width:"800"}}),t._v(" "),a("md-slider",{attrs:{"ng-model":"mc.x","ng-change":"mc.drawBall(mc.x)",min:"250",max:"750","aria-label":"parabDefn"}})],1),a("div",{staticClass:"blogText"},[t._v(" Similarly, we can dynamically illustrate the defining property of an ellipse: each point on an elliptical path obeys the rule that the sum of its distances from the foci is constant. ")]),t._m(6),a("div",{staticClass:"blogText"},[t._v(" If we also draw in the ellipse's tangent at each point, we have an illustration of the fact that an ellipse's focal lines (lines from each focus to a point on the ellipse) make equal angles with the ellipse's tangent. ")]),a("div",{attrs:{layout:"row"}},[t._m(7),a("div",{attrs:{layout:"column",flex:"30"}},[a("br"),a("br"),a("div",[t._v(" Horizontal Stretch:"),a("md-slider",{attrs:{min:"25",max:"200","ng-model":"mc.a","ng-change":"mc.drawEllipse(mc.a/100, mc.b/100, mc.theta)","aria-label":"ellipseA"}})],1),a("div",[t._v(" Vertical Stretch: "),a("md-slider",{attrs:{min:"25",max:"200","ng-model":"mc.b","ng-change":"mc.drawEllipse(mc.a/100, mc.b/100, mc.theta)","aria-label":"ellipseB"}})],1),a("div",[t._v(" Ball's Position: "),a("md-slider",{attrs:{min:"0",max:"628","ng-model":"mc.theta","ng-change":"mc.drawEllipse(mc.a/100, mc.b/100, mc.theta)","aria-label":"ellipseTheta"}})],1),t._m(8)])]),t._m(9),a("div",{staticClass:"blogText"},[t._v(" Similarly, balls shot out of a parabola's focus will bounce off its wall and shoot straight down, in a path perpendicular to the directrix. Said another way, all light rays passing into a parabolic shape will reflect off the wall and pass through its focus. ")]),a("div",{attrs:{layout:"","layout-align":"center center"}},[a("canvas",{attrs:{id:"parabReflection",width:"800",height:"800"}}),t._v(" "),a("md-slider",{attrs:{min:"250",max:"750","ng-model":"mc.x4","ng-change":"mc.drawBall4(mc.x4)","aria-label":"parabReflection"}})],1),a("div",{staticClass:"blogText"},[t._v(" Finally, we can illustrate the fact that a parabola's orthogonal tangents intersect on the directrix. Moreover, the line connecting two points on the parabola that have orthogonal tangents will always contain the focus! So there are an infinite number of right triangles living between a parabola and its directrix. ")]),a("div",{attrs:{layout:"","layout-align":"center center"}},[a("canvas",{attrs:{id:"parabOrth",width:"800",height:"800"}}),t._v(" "),a("md-slider",{attrs:{min:"250",max:"493","ng-model":"mc.x3","ng-change":"mc.drawBall3(mc.x3)","aria-label":"parabolaOrth"}})],1)])},Ge=[function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"flex flex-col items-center"},[a("div",[a("h2",{staticClass:"blogTitle"},[t._v("More Canvas: Fun with Conic Sections")])]),a("div",{staticClass:"blogSubtitle"},[t._v(" Dec. 10, 2017 ")])])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"blogText"},[t._v(" We use the parametric equations for an ellipse, "),a("div",{staticClass:"math",attrs:{layout:"","layout-align":"center center"}},[a("i",[t._v("x(t) = acos(t)"),a("br"),t._v("y(t) = bsin(t)")])]),t._v(" to draw the ball that follows our elliptical path: "),a("pre",[a("code",{attrs:{layout:"","layout-align":"center center"}},[t._v("ctx.beginPath();\n    var x = 250*a*Math.cos((theta/100));\n    var y = 250*b*Math.sin(theta/100);\n    ctx.arc(x, y, 10, 0, 2*Math.PI);\n    ctx.stroke();\n    ctx.fillStyle = 'yellow';\n    ctx.fill();\n  ")])])])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{attrs:{flex:"70",layout:"","layout-align":"center center"}},[a("canvas",{attrs:{id:"ellipse",width:"700",height:"700"}})])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",[a("button",{attrs:{"ng-click":"mc.toggleTangent()"}},[t._v("Show tangent")])])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"blogText"},[t._v(' Another way of saying it is: were you to send a ball toward an elliptical wall from one of its foci, the ball would bounce off of the wall and end up at the other focus. In the same way, sound waves bounce off the walls of elliptical rooms called "'),a("a",{attrs:{href:"https://en.wikipedia.org/wiki/Whispering_gallery"}},[t._v("whispering rooms")]),t._v('", allowing people standing at one focus to hear what is whispered by someone standing at the other focus! ')])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{attrs:{layout:"column","layout-align":"center center",id:"post2"}},[a("div",[a("h2",{staticClass:"blogTitle"},[t._v("More Canvas: Fun with Conic Sections")])]),a("div",{staticClass:"blogSubtitle"},[t._v(" Dec. 10, 2017 ")])])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"blogText"},[t._v(" We use the parametric equations for an ellipse, "),a("div",{staticClass:"math",attrs:{layout:"","layout-align":"center center"}},[a("i",[t._v("x(t) = acos(t)"),a("br"),t._v("y(t) = bsin(t)")])]),t._v(" to draw the ball that follows our elliptical path: "),a("pre",[a("code",{attrs:{layout:"","layout-align":"center center"}},[t._v("ctx.beginPath();\n    var x = 250*a*Math.cos((theta/100));\n    var y = 250*b*Math.sin(theta/100);\n    ctx.arc(x, y, 10, 0, 2*Math.PI);\n    ctx.stroke();\n    ctx.fillStyle = 'yellow';\n    ctx.fill();\n  ")])])])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{attrs:{flex:"70",layout:"","layout-align":"center center"}},[a("canvas",{attrs:{id:"ellipse",width:"700",height:"700"}})])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",[a("button",{attrs:{"ng-click":"mc.toggleTangent()"}},[t._v("Show tangent")])])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"blogText"},[t._v(' Another way of saying it is: were you to send a ball toward an elliptical wall from one of its foci, the ball would bounce off of the wall and end up at the other focus. In the same way, sound waves bounce off the walls of elliptical rooms called "'),a("a",{attrs:{href:"https://en.wikipedia.org/wiki/Whispering_gallery"}},[t._v("whispering rooms")]),t._v('", allowing people standing at one focus to hear what is whispered by someone standing at the other focus! ')])}],He=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return Object(o["b"])(e,t),e=Object(o["a"])([r["a"]],e),e}(r["c"]),Ue=He,Ve=Ue,Ye=Object(p["a"])(Ve,Je,Ge,!1,null,null,null),Qe=Ye.exports,Ke=function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div")},Ze=[],Xe=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return Object(o["b"])(e,t),e=Object(o["a"])([r["a"]],e),e}(r["c"]),ta=Xe,ea=ta,aa=Object(p["a"])(ea,Ke,Ze,!1,null,null,null),ia=aa.exports,na=function(){var t=this,e=t.$createElement;t._self._c;return t._m(0)},sa=[function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",[a("div",{staticClass:"flex flex-col items-center"},[a("div",[a("h2",{staticClass:"blogTitle"},[t._v("Greek Tragedy: On Becoming Oneself")])]),a("div",{staticClass:"blogSubtitle"},[t._v(" Jan. 14, 2018 ")])]),a("div",{staticClass:"blogText"},[t._v(" Greek tragedy is like pop culture: both are ever-relevant living documents. The difference is that 'pop culture' is alive and relevant because it's indexed to time — we feel entitled to ask, \"The 'pop' of "),a("i",[t._v("when")]),t._v('?". Greek tragedy, on the other hand, affects us with its depth of concern, its intensity of feeling, its sheer power to '),a("i",[t._v("endure")]),t._v(" through time. ")]),a("div",{staticClass:"blogText"},[t._v(" Two of my favorite tragedies are Euripides' "),a("i",[t._v("Bacchae")]),t._v(" and Sophocles' "),a("i",[t._v("Oedipus Rex")]),t._v(". Both focus on self-knowledge: the barriers to it, and the dangers and benefits that accompany its (gradual) attainment. Both (like many tragedies) deal with questions of fate, agency, and the desire to know oneself. ")]),a("div",{staticClass:"blogText"},[a("i",[t._v("Oedipus")]),t._v(" provides the clearer example. When he's born, Oedipus ("),a("i",[t._v("spoiler alert!")]),t._v(") is prophesized to marry his mother and kill his father. Upon hearing the prophecy, his father (Laius, king of Thebes) wants to eliminate Oedipus; but his mother, warm-hearted, entrusts the baby to a Theban shepherd. ")]),a("div",{staticClass:"blogText"},[t._v(" Oedipus grows up in another city. At one point he hears of the prophecy. Horrified at the idea of fulfilling it, he abandons the home of the people he takes to be his parents. Long story short, in his effort to avoid the prophecy, Oedipus ends up fulfilling it. On learning the truth, he blinds himself. ")]),a("div",{staticClass:"blogText"},[t._v(" The play takes the form of a detective story, in which Oedipus (current king of Thebes) searches for his father's murderer — which turns out to be himself. Many other characters — his mother/wife Jocasta, the shepherd who cared for him as a baby — try to dissuade Oedipus from discovering the truth, but he is relentless. ")]),a("div",{staticClass:"blogText"},[t._v(" Why should such a courageous pursuit of his own origin result in Oedipus's self-blinding? Why should his desire to see lead to his self-imposed darkness? ")]),a("div",{staticClass:"blogText"},[t._v(" To answer this, we have to consider Sophocles' larger arc for Oedipus. In the sequel, "),a("i",[t._v("Oedipus at Colonus")]),t._v(", Oedipus (aided by his daughter Antigone) achieves a kind of salvation. He gains the freedom to decide the fate of his traitorous sons; he attains an almost-divine status by the play's conclusion. ")]),a("div",{staticClass:"blogText"},[t._v(" Before he could arrive at this humbled state, Oedipus had to endure the pain of learning about his origins, his identity. But still, it's strange that Oedipus' submission to Fate — blinding himself in order to escape its power — turns out to be a necessary condition for exercising real agency. This is the puzzle that interests me. ")]),a("br"),a("br"),a("div",{staticClass:"flex justify-center"},[a("b",[t._v("* * *")])]),a("br"),a("br"),a("div",{staticClass:"blogText"},[t._v(" Turning to the "),a("i",[t._v("Bacchae")]),t._v(" might provide an angle onto this question, of why fate and freedom are so inextricably bound together in Oedipus' case (and throughout Greek tragedy). This story also takes place in Thebes, many years earlier. Dionysus, or Bacchus, has returned to the city after recruiting a fleet of women (from the East) to exact revenge for his mother's exile. She was exiled for claiming her child was a god (a child of Zeus); so naturally, Dionysus' goal is to prove his divine power. ")]),a("div",{staticClass:"blogText"},[t._v(" Enter King Pentheus, whose combination of inexperience and arrogance perfectly encapsulates youth. He stands for order, adherence to social norms, imprisonment, consistency. The central clash of the play is between Pentheus and Dionysus, who is impersonating a priest (of Dionysus). ")]),a("div",{staticClass:"blogText"},[t._v(" Dionysus is cited as god of many things: wine, revelry, revelation, masks, forgetting, oblivion. One way of understanding Dionysus' "),a("i",[t._v("divinity")]),t._v(" is that we cannot understand human nature without accounting for "),a("i",[t._v("Dionysian")]),t._v(" forces, influences, traits. Pentheus initially rejects these elements of humanity, but ultimately proves to be voyeuristically curious. ")]),a("div",{staticClass:"blogText"},[t._v(' At one point, after warning Pentheus not to bind him, Dionysus analyzes Pentheus: "You do not know why you live, or what you are doing, or who you are" (505). This is pretty much borne out: Pentheus is destroyed by his unwillingness to accept or acknowledge certain psychic forces. Seen in a certain light, it is Pentheus\' ignorance of himself, of what makes him a human, that catalyzes his demise. ')]),a("div",{staticClass:"blogText"},[t._v(" This prompts a preliminary answer to our question about Oedipus. He must paradoxically acknowledge his fate before he's freed, must see himself as he is before moving forward authentically in the world. ")]),a("div",{staticClass:"blogText"},[t._v(" This seems paradoxical because we find it natural (or at least I do) to think of a self as a function from situation to behavior. If your self is fixed, then given a certain input situation you'll return the expected output behavior. If someone knew all the facts about you and your situation, they could deduce what action you would take. And yet, it's Pentheus' unwillingness to acknowledge certain things about his nature that results in his destruction, and it's Oedipus' acknowledgement of those things that allows for his freedom and ultimate salvation. ")]),a("div",{staticClass:"blogText"},[t._v(" I guess the takeaway here is that it's a mistake to think that reflecting on our personal history and nature will only serve to restrict our action. Rather than imposing constraints on our behavior, it turns out that reflecting on, engaging with and ultimately accepting certain facts about ourselves will enlarge and enrich our freedom to engage with the world. ")]),a("div",{staticClass:"blogText"},[t._v(' It feels appropriate to conclude with a Spinoza quote: "The more clearly you understand yourself and your emotions, the more you become a lover of what is." ')])])}],oa=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return Object(o["b"])(e,t),e=Object(o["a"])([r["a"]],e),e}(r["c"]),ra=oa,la=ra,ca=Object(p["a"])(la,na,sa,!1,null,null,null),ha=ca.exports,da=function(){var t=this,e=t.$createElement;t._self._c;return t._m(0)},ua=[function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",[a("div",{staticClass:"flex flex-col items-center"},[a("div",[a("h2",{staticClass:"blogTitle"},[t._v("Self-Conception as Carapace")])]),a("div",{staticClass:"blogSubtitle"},[t._v(" Jan. 8, 2018 ")])]),a("div",{staticClass:"blogText"},[t._v(" The distinction we sometimes naturally draw between behavior and identity — what one does and who one is — has always struck me as at best porous, and at worst fraught. ")]),a("div",{staticClass:"blogText"},[t._v(" Of course the distinction can be useful. For example, say John is accused of a sexist action. It's easier to accept this, psychologically, than to try to defend oneself against the charge of being a sexist. ")]),a("div",{staticClass:"blogText"},[t._v(" But I'm more interested in the ways in which this distinction can become dangerous, and perhaps be dissolved. It's easy to fall into thinking of an identity — a conception of onself (as e.g. artist, programmer, friend), or an affiliation with a group (family, nation, religion) — as a program for generating appropriate behavior. \"I am a violinist, so I should play the violin; indeed, I must play in order to maintain my identity.\" ")]),a("div",{staticClass:"blogText"},[t._v(" In the film "),a("i",[t._v("Brink")]),t._v(", the main character is counseled by his father: \"Skating isn't who you are; skating is what you do.\" This is all well and good, and it likely planted the seeds for my thoughts early in life. But for the majority of my life, being a student wasn't something I did: it was who I was. ")]),a("div",{staticClass:"blogText"},[t._v(" So I can attest to the ways in which an identity, a certain self-conception, can become like a carapace. Like an insect's exoskeletal shell, an identity (\"I am a student\") can provide structure and guidance to one's behavior. It can also provide protection against possible assailants of one's motivation. ")]),a("div",{staticClass:"blogText"},[t._v(" But it can also become brittle, inhibiting one's growth and generating unhealthy expectations. Focusing on only one aspect of your identity can delude you; suddenly your worth seems to depend on that aspect alone. Suddenly only behaviors associated with that conception of yourself come naturally to you. Suddenly you are not sure who you are beyond being someone who plays that role. ")]),a("div",{staticClass:"blogText"},[t._v(' I grant this may seem melodramatic. Still, I think the core idea stands. Be yourself, and even be "yourself" — you as you conceive yourself to be — but don\'t be a prisoner to "yourself." Be yourself. ')])])}],va=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return Object(o["b"])(e,t),e=Object(o["a"])([r["a"]],e),e}(r["c"]),pa=va,fa=pa,ga=Object(p["a"])(fa,da,ua,!1,null,null,null),ma=ga.exports,ba=function(){var t=this,e=t.$createElement;t._self._c;return t._m(0)},_a=[function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",[a("div",{staticClass:"flex flex-col items-center"},[a("div",[a("h2",{staticClass:"blogTitle"},[t._v("Rilke's "),a("i",[t._v("Archaic Torso of Apollo")])])]),a("div",{staticClass:"blogSubtitle"},[t._v(" Jan. 15, 2018 ")])]),a("div",{staticClass:"blogText"},[t._v(" I recently had the pleasure of playing the role of the Table Topics speaker at our weekly Toastmasters meeting. For our topic I chose the idea of beauty. ")]),a("div",{staticClass:"blogText"},[t._v(" The concept seems at once ubiquitous and nebulous. As easily as it comes to my lips, so stubbornly does the thought it expresses resist clarification. I find it difficult to translate my thought into language not containing the word 'beauty'. ")]),a("div",{staticClass:"blogText"},[t._v(" It helps to have something concrete to ground our reflection. One of my favorite poems, Rilke's "),a("i",[t._v("Archaic Torso of Apollo")]),t._v(", has the advantage that in addition to being a beautiful poem, it is also in many ways "),a("i",[t._v("about")]),t._v(" the experience of beauty. ")]),a("div",{staticClass:"poem flex flex-col items-center my-12"},[a("pre",{staticClass:"poem"},[t._v("      We cannot know his legendary head\n      with eyes like ripening fruit. And yet his torso\n      is still suffused with brilliance from inside,\n      like a lamp, in which his gaze, now turned to low,\n\n      gleams in all its power. Otherwise\n      the curved breast could not dazzle you so, nor could\n      a smile run through the placid hips and thighs\n      to that dark center where procreation flared.\n\n      Otherwise this stone would seem defaced\n      beneath the translucent cascade of the shoulders\n      and would not glisten like a wild beast's fur:\n\n      would not, from all the borders of itself,\n      burst like a star: for here there is no place\n      that does not see you. You must change your life.")])]),a("div",{staticClass:"blogText"},[t._v(' Indeed, beauty "dazzles" and transfixes us. It combines an inviting smile with a retreating dark center, a felt brilliance with a displaced and unknown head. The experience of beauty demands to be recorded, and yet with equal intensity it refuses to be ensnared, trapped on the page or in the mind. It has a quality of '),a("i",[t._v("aliveness")]),t._v('; it "glisten[s] like a wild beast\'s fur." ')]),a("div",{staticClass:"blogText"},[t._v(" Beauty invites us to "),a("i",[t._v("see")]),t._v(", but also stimulates us to try to see ourselves seeing. It compels us to reflect on why we are so moved, to try and catch ourselves in the moment of rapt attention and pin that moment to our corkboard, like a preserved butterfly. Beauty is powerful, and we feel impelled to investigate the sources of its power. We are pushed into a kind of sine wave between wanting to see, to inhale the beauty, and wanting to understand why it moves us. ")]),a("div",{staticClass:"blogText"},[t._v(" This idea calls to mind the etymology of 'aesthetics'. Beauty is tethered to what the Greeks called αισθησις ("),a("i",[t._v("aistheisis")]),t._v("), or sense-perception. We're tempted to think of beauty as living only on the emotional side of the mind/passions dichotomy. But can we really understand the idea of beauty without accounting for the intellectual experience, the quest to understand and organize, occasioned by a feeling of beauty? ")]),a("div",{staticClass:"blogText"},[t._v(" Rilke cashes out the interplay between the intellectual and emotional/perceptual aspects of beauty in ethical terms. The imperative that concludes the poem arrives abruptly, and yet we feel somehow prepared for it. Much of the conclusion's force can be traced to the way in which the earlier aesthetic musings manage to pry open a certain emotional part of the reader, preparing her for contact with the ethical dimension. ")])])}],ya=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return Object(o["b"])(e,t),e=Object(o["a"])([r["a"]],e),e}(r["c"]),wa=ya,xa=wa,Ca=(a("550e"),Object(p["a"])(xa,ba,_a,!1,null,"f5dadc5a",null)),ka=Ca.exports,Ta={Post1:vt,Post2:yt,Post3:jt,Post4:$t,Post5:qt,Post6:Vt,Post7:ee,Post8:le,Post9:fe,Post10:xe,Post11:Ie,Post12:ze,Post13:Fe,Post14:Qe,Post15:ia,Post16:ha,Post17:ma,Post18:ka};i["a"].use(x["a"]),i["a"].config.productionTip=!1;var Sa=new x["a"]({mode:"hash",routes:[{path:"/",redirect:"/about"},{name:"about",path:"/about",component:I},{name:"resume",path:"/resume",component:z},{name:"blog",path:"/blog",component:ot,children:l.map((function(t){return{path:t.path.slice(1),component:Ta[t.fileName],name:t.path.slice(1)}}))},{name:"projects",path:"/projects",component:J},{name:"jeopardy",path:"/jeopardy",component:Z}]});new i["a"]({router:Sa,render:function(t){return t(w)}}).$mount("#app")},ce67:function(t,e,a){},d056:function(t,e,a){t.exports=a.p+"img/julia.a5afc7d4.png"},d6c0:function(t,e,a){},de8a:function(t,e,a){t.exports=a.p+"img/1000.c71717fd.png"},df5b:function(t,e,a){t.exports=a.p+"img/600-min.07211cb6.png"},e72d:function(t,e,a){t.exports=a.p+"img/sonic-boom-animation.424224aa.png"},eb53:function(t,e,a){t.exports=a.p+"img/Screen Shot 2021-04-18 at 6.53.41 PM.3190f859.png"},f1d7:function(t,e,a){t.exports=a.p+"img/400.fc466b8a.png"},f291:function(t,e,a){t.exports=a.p+"img/Screen Shot 2021-04-18 at 6.53.07 PM.435d0c14.png"},f5cc:function(t,e,a){t.exports=a.p+"img/face2.b3ab8ec9.jpg"},f7c3:function(t,e,a){t.exports=a.p+"img/Screen Shot 2021-04-18 at 6.53.53 PM.d12677b9.png"},ff6a:function(t,e,a){"use strict";a("5507")}});
//# sourceMappingURL=app.e2d76ac5.js.map